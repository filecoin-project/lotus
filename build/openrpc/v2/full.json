{
    "openrpc": "1.2.6",
    "info": {
        "title": "Lotus RPC API",
        "version": "1.32.3-dev"
    },
    "methods": [
        {
            "name": "Filecoin.ChainGetTipSet",
            "description": "```go\nfunc (s *FullNodeStruct) ChainGetTipSet(p0 context.Context, p1 types.TipSetSelector) (*types.TipSet, error) {\n\tif s.Internal.ChainGetTipSet == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetTipSet(p0, p1)\n}\n```",
            "summary": "ChainGetTipSet retrieves a tipset that corresponds to the specified selector\ncriteria. The criteria can be provided in the form of a tipset key, a\nblockchain height including an optional fallback to previous non-null tipset,\nor a designated tag such as \"latest\" or \"finalized\".\n\nThe \"Finalized\" tag returns the tipset that is considered finalized based on\nthe consensus protocol of the current node, either Filecoin EC Finality or\nFilecoin Fast Finality (F3). The finalized tipset selection gracefully falls\nback to EC finality in cases where F3 isn't ready or not running.\n\nIn a case where no selector is provided, an error is returned. The selector\nmust be explicitly specified.\n\nFor more details, refer to the types.TipSetSelector and\ntypes.NewTipSetSelector.\n\nExample usage:\n\n\tselector := types.TipSetSelectors.Latest\n\ttipSet, err := node.ChainGetTipSet(context.Background(), selector)\n\tif err != nil {\n\t\tfmt.Println(\"Error retrieving tipset:\", err)\n\t\treturn\n\t}\n\tfmt.Printf(\"Latest TipSet: %v\\n\", tipSet)\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetSelector",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "tag": "finalized"
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "height": {
                                "additionalProperties": false,
                                "properties": {
                                    "anchor": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "key": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "tag": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "at": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "previous": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "key": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "tag": {
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.TipSet",
                "description": "*types.TipSet",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Cids": [
                                {
                                    "/": "bafy2bzacedo7hjsumaajt6sbor42qycvjyk6goqe4oi4o4ddsjxkdeqrqf42c"
                                }
                            ],
                            "Blocks": [
                                {
                                    "Miner": "f01938223",
                                    "Ticket": {
                                        "VRFProof": "rIPyBy+F827Szc5oN/6ylCmpzxfAWr7aI5F4YJrN4pLSyknkcJI3ivsCo2KKjQVZFRnFyEus1maD5LdzQpnFRKMla4138qEuML+Ne/fsgOMrUEAeL34ceVwJd+Mt4Jrz"
                                    },
                                    "ElectionProof": {
                                        "WinCount": 1,
                                        "VRFProof": "sN51JqjZNf+xWxwoo+wlMH1bpXI9T3wUIrla6FpwTxU4jC1z+ab5NFU/B2ZdDITTE+u8qaiibtLkld5lhNcOEOUqwKNyJ4nwFo5vAhWqvOTNdOiZmxsKpWG0NZUoXb/+"
                                    },
                                    "BeaconEntries": [
                                        {
                                            "Round": 17133822,
                                            "Data": "tH4q8euIaP9/QRJt8ALfkBvttSmQ/DOAt8+37wGGV5f8kkhzEFrHhskitNnPS70j"
                                        },
                                        {
                                            "Round": 17133832,
                                            "Data": "uQD5cEn8U69+sPjpccT8Bm0jVrnXLScf2jBkLJNHvAHLA6tPsZDREzpBIckpVvPy"
                                        }
                                    ],
                                    "WinPoStProof": [
                                        {
                                            "PoStProof": 3,
                                            "ProofBytes": "qOPLMhMui8qm/rE2y/UceyBDv5JvRCH5Fc5Ul+kuN190XDcMme5eKURUCmE2sN1HoQ2dMZX+xNZY351dbG93H/tUr6wuNhkvmemi2Xi62YvqU36/kJh+K2YBiW7h/4LXCUTP/6XAOONOPl+j9GqS7RQxruPLfIyehvzVC0C8dB8+SVWtAnRKRPUUOPJvyHKejlrCyzWXOz/I7JG2/qEGLD0xwazBVwML1vVvuE5NzXeOoQGlnB2PwSRb5Cn8FH8Q"
                                        }
                                    ],
                                    "Parents": [
                                        {
                                            "/": "bafy2bzaceba2kdmysmi5ieugzvv5np7f2lobayzpvtk777du74n7jq6xhynda"
                                        },
                                        {
                                            "/": "bafy2bzacecrye24tkqrvvddcf62gfi4z4o33z2tdedbpaalordozaxfrz2jyi"
                                        },
                                        {
                                            "/": "bafy2bzaceab5mrohjvnp3mz7mo33ky7qqlmssrs7veqmjrgouafxyhnd5dy66"
                                        }
                                    ],
                                    "ParentWeight": "116013147118",
                                    "Height": 4863283,
                                    "ParentStateRoot": {
                                        "/": "bafy2bzaceajxzsvzuq3ddzxfrs2jlaxsooqmgdy5uxbqujnjy3y56iumzzy7u"
                                    },
                                    "ParentMessageReceipts": {
                                        "/": "bafy2bzacecfcx2ykqucyv3gkyrcy3upwrvdraz3ktfg7phkqysefdwsggglac"
                                    },
                                    "Messages": {
                                        "/": "bafy2bzacebzofmh6migvc4v6qsme6vuxlhi6pv2ocy4apyic3uihjqm7dum3u"
                                    },
                                    "BLSAggregate": {
                                        "Type": 2,
                                        "Data": "krFATGA0OBu/kFwtXsThVtKCkppnU7045uTURCeiOeJttxuXfx3wqJrLkCytnJFWFLVC+tiVWI4BxC3wqc9r6eAlNr9dEBx+3KwML/RFG/b5grmknLpGWn7g1EB/2T4y"
                                    },
                                    "Timestamp": 1744204890,
                                    "BlockSig": {
                                        "Type": 2,
                                        "Data": "pWiUr+M8xxTxLED7GuU586gSfZCaHyLbLj0uS0HhKYRtHuyG47fIrfIT/04OCmQvEXBD8pFraWbMc3tnFrSsM1mIBJ5M38UPUfXDSspo+QGdouo2kll2X+VNKY3ajb1K"
                                    },
                                    "ForkSignaling": 0,
                                    "ParentBaseFee": "20592036"
                                }
                            ],
                            "Height": 4863283
                        }
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L32"
            }
        },
        {
            "name": "Filecoin.StateGetActor",
            "description": "```go\nfunc (s *FullNodeStruct) StateGetActor(p0 context.Context, p1 address.Address, p2 types.TipSetSelector) (*types.Actor, error) {\n\tif s.Internal.StateGetActor == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateGetActor(p0, p1, p2)\n}\n```",
            "summary": "StateGetActor retrieves the actor information for the specified address at the\nselected tipset.\n\nThis function returns the on-chain Actor object including:\n  - Code CID (determines the actor's type)\n  - State root CID\n  - Balance in attoFIL\n  - Nonce (for account actors)\n\nThe TipSetSelector parameter provides flexible options for selecting the tipset:\n  - TipSetSelectors.Latest: the most recent tipset with the heaviest weight\n  - TipSetSelectors.Finalized: the most recent finalized tipset\n  - TipSetSelectors.Height(epoch, previous, anchor): tipset at the specified height\n  - TipSetSelectors.Key(key): tipset with the specified key\n\nSee types.TipSetSelector documentation for additional details.\n\nIf the actor does not exist at the specified tipset, this function returns nil.\n\nExperimental: This API is experimental and may change without notice.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetSelector",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "tag": "finalized"
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "height": {
                                "additionalProperties": false,
                                "properties": {
                                    "anchor": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "key": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "tag": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "at": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "previous": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "key": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "tag": {
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.Actor",
                "description": "*types.Actor",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Code": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Head": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Nonce": 42,
                            "Balance": "0",
                            "DelegatedAddress": "f01234"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Balance": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Code": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "DelegatedAddress": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Head": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Nonce": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L43"
            }
        },
        {
            "name": "Filecoin.StateGetID",
            "description": "```go\nfunc (s *FullNodeStruct) StateGetID(p0 context.Context, p1 address.Address, p2 types.TipSetSelector) (*address.Address, error) {\n\tif s.Internal.StateGetID == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateGetID(p0, p1, p2)\n}\n```",
            "summary": "StateGetID retrieves the ID address for the specified address at the selected tipset.\n\nEvery actor on the Filecoin network has a unique ID address (format: f0123).\nThis function resolves any address type (ID, robust, or delegated) to its canonical\nID address representation at the specified tipset.\n\nThe function is particularly useful for:\n  - Normalizing different address formats to a consistent representation\n  - Following address changes across state transitions\n  - Verifying that an address corresponds to an existing actor\n\nThe TipSetSelector parameter provides flexible options for selecting the tipset.\nSee StateGetActor documentation for details on selection options.\n\nIf the address cannot be resolved at the specified tipset, this function returns nil.\n\nExperimental: This API is experimental and may change without notice.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetSelector",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "tag": "finalized"
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "height": {
                                "additionalProperties": false,
                                "properties": {
                                    "anchor": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "key": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "tag": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "at": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "previous": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "key": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "tag": {
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*address.Address",
                "description": "*address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L54"
            }
        }
    ]
}
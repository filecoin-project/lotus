{
    "openrpc": "1.2.6",
    "info": {
        "title": "Lotus RPC API",
        "version": "1.32.3-dev"
    },
    "methods": [
        {
            "name": "Filecoin.ChainGetTipSet",
            "description": "```go\nfunc (s *FullNodeStruct) ChainGetTipSet(p0 context.Context, p1 types.TipSetSelector) (*types.TipSet, error) {\n\tif s.Internal.ChainGetTipSet == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetTipSet(p0, p1)\n}\n```",
            "summary": "ChainGetTipSet retrieves a tipset that corresponds to the specified selector\ncriteria. The criteria can be provided in the form of a tipset key, a\nblockchain height including an optional fallback to previous non-null tipset,\nor a designated tag such as \"latest\", \"finalized\", or \"safe\".\n\nThe \"Finalized\" tag returns the tipset that is considered finalized based on\nthe consensus protocol of the current node, either Filecoin EC Finality or\nFilecoin Fast Finality (F3). The finalized tipset selection gracefully falls\nback to EC finality in cases where F3 isn't ready or not running.\n\nThe \"Safe\" tag returns the tipset between the \"Finalized\" tipset and\n\"Latest - build.SafeHeightDistance\". This provides a balance between\nfinality confidence and recency. If the tipset at the safe height is null,\nthe first non-nil parent tipset is returned, similar to the behavior of\nselecting by height with the 'previous' option set to true.\n\nIn a case where no selector is provided, an error is returned. The selector\nmust be explicitly specified.\n\nFor more details, refer to the types.TipSetSelector.\n\nExample usage:\n\n selector := types.TipSetSelectors.Latest\n tipSet, err := node.ChainGetTipSet(context.Background(), selector)\n if err != nil {\n    fmt.Println(\"Error retrieving tipset:\", err)\n    return\n }\n fmt.Printf(\"Latest TipSet: %v\\n\", tipSet)\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetSelector",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "tag": "finalized"
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "height": {
                                "additionalProperties": false,
                                "properties": {
                                    "anchor": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "key": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "tag": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "at": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "previous": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "key": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "tag": {
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.TipSet",
                "description": "*types.TipSet",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Cids": [
                                {
                                    "/": "bafy2bzacedo7hjsumaajt6sbor42qycvjyk6goqe4oi4o4ddsjxkdeqrqf42c"
                                }
                            ],
                            "Blocks": [
                                {
                                    "Miner": "f01938223",
                                    "Ticket": {
                                        "VRFProof": "rIPyBy+F827Szc5oN/6ylCmpzxfAWr7aI5F4YJrN4pLSyknkcJI3ivsCo2KKjQVZFRnFyEus1maD5LdzQpnFRKMla4138qEuML+Ne/fsgOMrUEAeL34ceVwJd+Mt4Jrz"
                                    },
                                    "ElectionProof": {
                                        "WinCount": 1,
                                        "VRFProof": "sN51JqjZNf+xWxwoo+wlMH1bpXI9T3wUIrla6FpwTxU4jC1z+ab5NFU/B2ZdDITTE+u8qaiibtLkld5lhNcOEOUqwKNyJ4nwFo5vAhWqvOTNdOiZmxsKpWG0NZUoXb/+"
                                    },
                                    "BeaconEntries": [
                                        {
                                            "Round": 17133822,
                                            "Data": "tH4q8euIaP9/QRJt8ALfkBvttSmQ/DOAt8+37wGGV5f8kkhzEFrHhskitNnPS70j"
                                        },
                                        {
                                            "Round": 17133832,
                                            "Data": "uQD5cEn8U69+sPjpccT8Bm0jVrnXLScf2jBkLJNHvAHLA6tPsZDREzpBIckpVvPy"
                                        }
                                    ],
                                    "WinPoStProof": [
                                        {
                                            "PoStProof": 3,
                                            "ProofBytes": "qOPLMhMui8qm/rE2y/UceyBDv5JvRCH5Fc5Ul+kuN190XDcMme5eKURUCmE2sN1HoQ2dMZX+xNZY351dbG93H/tUr6wuNhkvmemi2Xi62YvqU36/kJh+K2YBiW7h/4LXCUTP/6XAOONOPl+j9GqS7RQxruPLfIyehvzVC0C8dB8+SVWtAnRKRPUUOPJvyHKejlrCyzWXOz/I7JG2/qEGLD0xwazBVwML1vVvuE5NzXeOoQGlnB2PwSRb5Cn8FH8Q"
                                        }
                                    ],
                                    "Parents": [
                                        {
                                            "/": "bafy2bzaceba2kdmysmi5ieugzvv5np7f2lobayzpvtk777du74n7jq6xhynda"
                                        },
                                        {
                                            "/": "bafy2bzacecrye24tkqrvvddcf62gfi4z4o33z2tdedbpaalordozaxfrz2jyi"
                                        },
                                        {
                                            "/": "bafy2bzaceab5mrohjvnp3mz7mo33ky7qqlmssrs7veqmjrgouafxyhnd5dy66"
                                        }
                                    ],
                                    "ParentWeight": "116013147118",
                                    "Height": 4863283,
                                    "ParentStateRoot": {
                                        "/": "bafy2bzaceajxzsvzuq3ddzxfrs2jlaxsooqmgdy5uxbqujnjy3y56iumzzy7u"
                                    },
                                    "ParentMessageReceipts": {
                                        "/": "bafy2bzacecfcx2ykqucyv3gkyrcy3upwrvdraz3ktfg7phkqysefdwsggglac"
                                    },
                                    "Messages": {
                                        "/": "bafy2bzacebzofmh6migvc4v6qsme6vuxlhi6pv2ocy4apyic3uihjqm7dum3u"
                                    },
                                    "BLSAggregate": {
                                        "Type": 2,
                                        "Data": "krFATGA0OBu/kFwtXsThVtKCkppnU7045uTURCeiOeJttxuXfx3wqJrLkCytnJFWFLVC+tiVWI4BxC3wqc9r6eAlNr9dEBx+3KwML/RFG/b5grmknLpGWn7g1EB/2T4y"
                                    },
                                    "Timestamp": 1744204890,
                                    "BlockSig": {
                                        "Type": 2,
                                        "Data": "pWiUr+M8xxTxLED7GuU586gSfZCaHyLbLj0uS0HhKYRtHuyG47fIrfIT/04OCmQvEXBD8pFraWbMc3tnFrSsM1mIBJ5M38UPUfXDSspo+QGdouo2kll2X+VNKY3ajb1K"
                                    },
                                    "ForkSignaling": 0,
                                    "ParentBaseFee": "20592036"
                                }
                            ],
                            "Height": 4863283
                        }
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L132"
            }
        },
        {
            "name": "Filecoin.EthAccounts",
            "description": "```go\nfunc (s *FullNodeStruct) EthAccounts(p0 context.Context) ([]ethtypes.EthAddress, error) {\n\tif s.Internal.EthAccounts == nil {\n\t\treturn *new([]ethtypes.EthAddress), ErrNotSupported\n\t}\n\treturn s.Internal.EthAccounts(p0)\n}\n```",
            "summary": "EthAccounts returns a list of Ethereum accounts managed by the node.\nMaps to JSON-RPC method: \"eth_accounts\".\nLotus does not manage private keys, so this will always return an empty array.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "[]ethtypes.EthAddress",
                "description": "[]ethtypes.EthAddress",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031"
                        ]
                    ],
                    "items": [
                        {
                            "items": [
                                {
                                    "title": "number",
                                    "description": "Number is a number",
                                    "type": [
                                        "number"
                                    ]
                                }
                            ],
                            "maxItems": 20,
                            "minItems": 20,
                            "type": [
                                "array"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L143"
            }
        },
        {
            "name": "Filecoin.EthAddressToFilecoinAddress",
            "description": "```go\nfunc (s *FullNodeStruct) EthAddressToFilecoinAddress(p0 context.Context, p1 ethtypes.EthAddress) (address.Address, error) {\n\tif s.Internal.EthAddressToFilecoinAddress == nil {\n\t\treturn *new(address.Address), ErrNotSupported\n\t}\n\treturn s.Internal.EthAddressToFilecoinAddress(p0, p1)\n}\n```",
            "summary": "EthAddressToFilecoinAddress converts an Ethereum address to a Filecoin f410 address.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 20,
                        "minItems": 20,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "address.Address",
                "description": "address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L154"
            }
        },
        {
            "name": "Filecoin.EthBlockNumber",
            "description": "```go\nfunc (s *FullNodeStruct) EthBlockNumber(p0 context.Context) (ethtypes.EthUint64, error) {\n\tif s.Internal.EthBlockNumber == nil {\n\t\treturn *new(ethtypes.EthUint64), ErrNotSupported\n\t}\n\treturn s.Internal.EthBlockNumber(p0)\n}\n```",
            "summary": "EthBlockNumber returns the number of the latest executed block (head - 1).\nMaps to JSON-RPC method: \"eth_blockNumber\".\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "ethtypes.EthUint64",
                "description": "ethtypes.EthUint64",
                "summary": "",
                "schema": {
                    "title": "number",
                    "description": "Number is a number",
                    "examples": [
                        "0x5"
                    ],
                    "type": [
                        "number"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L165"
            }
        },
        {
            "name": "Filecoin.EthCall",
            "description": "```go\nfunc (s *FullNodeStruct) EthCall(p0 context.Context, p1 ethtypes.EthCall, p2 ethtypes.EthBlockNumberOrHash) (ethtypes.EthBytes, error) {\n\tif s.Internal.EthCall == nil {\n\t\treturn *new(ethtypes.EthBytes), ErrNotSupported\n\t}\n\treturn s.Internal.EthCall(p0, p1, p2)\n}\n```",
            "summary": "EthCall executes a read-only call to a contract at a specific block state, identified by\nits number, hash, or a special tag like \"latest\" or \"finalized\".\nMaps to JSON-RPC method: \"eth_call\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthCall",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "from": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                                "to": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                                "gas": "0x5",
                                "gasPrice": "0x0",
                                "value": "0x0",
                                "data": "0x07"
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "data": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "type": "array"
                            },
                            "from": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 20,
                                "minItems": 20,
                                "type": "array"
                            },
                            "gas": {
                                "title": "number",
                                "type": "number"
                            },
                            "gasPrice": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "to": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 20,
                                "minItems": 20,
                                "type": "array"
                            },
                            "value": {
                                "additionalProperties": false,
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "ethtypes.EthBlockNumberOrHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "blockHash": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "blockNumber": {
                                "title": "number",
                                "type": "number"
                            },
                            "requireCanonical": {
                                "type": "boolean"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthBytes",
                "description": "ethtypes.EthBytes",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x07"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L176"
            }
        },
        {
            "name": "Filecoin.EthChainId",
            "description": "```go\nfunc (s *FullNodeStruct) EthChainId(p0 context.Context) (ethtypes.EthUint64, error) {\n\tif s.Internal.EthChainId == nil {\n\t\treturn *new(ethtypes.EthUint64), ErrNotSupported\n\t}\n\treturn s.Internal.EthChainId(p0)\n}\n```",
            "summary": "EthChainId retrieves the chain ID of the Ethereum-compatible network.\nMaps to JSON-RPC method: \"eth_chainId\".\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "ethtypes.EthUint64",
                "description": "ethtypes.EthUint64",
                "summary": "",
                "schema": {
                    "title": "number",
                    "description": "Number is a number",
                    "examples": [
                        "0x5"
                    ],
                    "type": [
                        "number"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L187"
            }
        },
        {
            "name": "Filecoin.EthEstimateGas",
            "description": "```go\nfunc (s *FullNodeStruct) EthEstimateGas(p0 context.Context, p1 jsonrpc.RawParams) (ethtypes.EthUint64, error) {\n\tif s.Internal.EthEstimateGas == nil {\n\t\treturn *new(ethtypes.EthUint64), ErrNotSupported\n\t}\n\treturn s.Internal.EthEstimateGas(p0, p1)\n}\n```",
            "summary": "EthEstimateGas estimates the gas required to execute a transaction.\nMaps to JSON-RPC method: \"eth_estimateGas\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "jsonrpc.RawParams",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Bw=="
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthUint64",
                "description": "ethtypes.EthUint64",
                "summary": "",
                "schema": {
                    "title": "number",
                    "description": "Number is a number",
                    "examples": [
                        "0x5"
                    ],
                    "type": [
                        "number"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L198"
            }
        },
        {
            "name": "Filecoin.EthFeeHistory",
            "description": "```go\nfunc (s *FullNodeStruct) EthFeeHistory(p0 context.Context, p1 jsonrpc.RawParams) (ethtypes.EthFeeHistory, error) {\n\tif s.Internal.EthFeeHistory == nil {\n\t\treturn *new(ethtypes.EthFeeHistory), ErrNotSupported\n\t}\n\treturn s.Internal.EthFeeHistory(p0, p1)\n}\n```",
            "summary": "EthFeeHistory retrieves historical gas fee data for a range of blocks.\nMaps to JSON-RPC method: \"eth_feeHistory\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "jsonrpc.RawParams",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Bw=="
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthFeeHistory",
                "description": "ethtypes.EthFeeHistory",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "oldestBlock": "0x5",
                            "baseFeePerGas": [
                                "0x0"
                            ],
                            "gasUsedRatio": [
                                12.3
                            ],
                            "reward": []
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "baseFeePerGas": {
                            "items": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "gasUsedRatio": {
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "oldestBlock": {
                            "title": "number",
                            "type": "number"
                        },
                        "reward": {
                            "items": {
                                "items": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L209"
            }
        },
        {
            "name": "Filecoin.EthGasPrice",
            "description": "```go\nfunc (s *FullNodeStruct) EthGasPrice(p0 context.Context) (ethtypes.EthBigInt, error) {\n\tif s.Internal.EthGasPrice == nil {\n\t\treturn *new(ethtypes.EthBigInt), ErrNotSupported\n\t}\n\treturn s.Internal.EthGasPrice(p0)\n}\n```",
            "summary": "EthGasPrice retrieves the current gas price in the network.\nMaps to JSON-RPC method: \"eth_gasPrice\".\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "ethtypes.EthBigInt",
                "description": "ethtypes.EthBigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L220"
            }
        },
        {
            "name": "Filecoin.EthGetBalance",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetBalance(p0 context.Context, p1 ethtypes.EthAddress, p2 ethtypes.EthBlockNumberOrHash) (ethtypes.EthBigInt, error) {\n\tif s.Internal.EthGetBalance == nil {\n\t\treturn *new(ethtypes.EthBigInt), ErrNotSupported\n\t}\n\treturn s.Internal.EthGetBalance(p0, p1, p2)\n}\n```",
            "summary": "EthGetBalance retrieves the balance of an Ethereum address at a specific block state,\nidentified by its number, hash, or a special tag like \"latest\" or \"finalized\".\nMaps to JSON-RPC method: \"eth_getBalance\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 20,
                        "minItems": 20,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "ethtypes.EthBlockNumberOrHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "blockHash": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "blockNumber": {
                                "title": "number",
                                "type": "number"
                            },
                            "requireCanonical": {
                                "type": "boolean"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthBigInt",
                "description": "ethtypes.EthBigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L231"
            }
        },
        {
            "name": "Filecoin.EthGetBlockByHash",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetBlockByHash(p0 context.Context, p1 ethtypes.EthHash, p2 bool) (ethtypes.EthBlock, error) {\n\tif s.Internal.EthGetBlockByHash == nil {\n\t\treturn *new(ethtypes.EthBlock), ErrNotSupported\n\t}\n\treturn s.Internal.EthGetBlockByHash(p0, p1, p2)\n}\n```",
            "summary": "EthGetBlockByHash retrieves a block by its hash. If fullTxInfo is true, it includes full\ntransaction objects; otherwise, it includes only transaction hashes.\nMaps to JSON-RPC method: \"eth_getBlockByHash\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthBlock",
                "description": "ethtypes.EthBlock",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "hash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "parentHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "sha3Uncles": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "miner": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "stateRoot": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "transactionsRoot": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "receiptsRoot": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "logsBloom": "0x07",
                            "difficulty": "0x5",
                            "totalDifficulty": "0x5",
                            "number": "0x5",
                            "gasLimit": "0x5",
                            "gasUsed": "0x5",
                            "timestamp": "0x5",
                            "extraData": "0x07",
                            "mixHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "nonce": "0x0707070707070707",
                            "baseFeePerGas": "0x0",
                            "size": "0x5",
                            "transactions": [
                                {}
                            ],
                            "uncles": [
                                "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                            ]
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "baseFeePerGas": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "difficulty": {
                            "title": "number",
                            "type": "number"
                        },
                        "extraData": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "gasLimit": {
                            "title": "number",
                            "type": "number"
                        },
                        "gasUsed": {
                            "title": "number",
                            "type": "number"
                        },
                        "hash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "logsBloom": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "miner": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "mixHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "nonce": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 8,
                            "minItems": 8,
                            "type": "array"
                        },
                        "number": {
                            "title": "number",
                            "type": "number"
                        },
                        "parentHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "receiptsRoot": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "sha3Uncles": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "size": {
                            "title": "number",
                            "type": "number"
                        },
                        "stateRoot": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "timestamp": {
                            "title": "number",
                            "type": "number"
                        },
                        "totalDifficulty": {
                            "title": "number",
                            "type": "number"
                        },
                        "transactions": {
                            "items": {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "transactionsRoot": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "uncles": {
                            "items": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L242"
            }
        },
        {
            "name": "Filecoin.EthGetBlockByNumber",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetBlockByNumber(p0 context.Context, p1 string, p2 bool) (ethtypes.EthBlock, error) {\n\tif s.Internal.EthGetBlockByNumber == nil {\n\t\treturn *new(ethtypes.EthBlock), ErrNotSupported\n\t}\n\treturn s.Internal.EthGetBlockByNumber(p0, p1, p2)\n}\n```",
            "summary": "EthGetBlockByNumber retrieves a block by its number or a special tag like \"latest\" or\n\"finalized\". If fullTxInfo is true, it includes full transaction objects; otherwise, it\nincludes only transaction hashes.\nMaps to JSON-RPC method: \"eth_getBlockByNumber\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthBlock",
                "description": "ethtypes.EthBlock",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "hash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "parentHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "sha3Uncles": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "miner": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "stateRoot": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "transactionsRoot": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "receiptsRoot": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "logsBloom": "0x07",
                            "difficulty": "0x5",
                            "totalDifficulty": "0x5",
                            "number": "0x5",
                            "gasLimit": "0x5",
                            "gasUsed": "0x5",
                            "timestamp": "0x5",
                            "extraData": "0x07",
                            "mixHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "nonce": "0x0707070707070707",
                            "baseFeePerGas": "0x0",
                            "size": "0x5",
                            "transactions": [
                                {}
                            ],
                            "uncles": [
                                "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                            ]
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "baseFeePerGas": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "difficulty": {
                            "title": "number",
                            "type": "number"
                        },
                        "extraData": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "gasLimit": {
                            "title": "number",
                            "type": "number"
                        },
                        "gasUsed": {
                            "title": "number",
                            "type": "number"
                        },
                        "hash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "logsBloom": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "miner": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "mixHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "nonce": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 8,
                            "minItems": 8,
                            "type": "array"
                        },
                        "number": {
                            "title": "number",
                            "type": "number"
                        },
                        "parentHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "receiptsRoot": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "sha3Uncles": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "size": {
                            "title": "number",
                            "type": "number"
                        },
                        "stateRoot": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "timestamp": {
                            "title": "number",
                            "type": "number"
                        },
                        "totalDifficulty": {
                            "title": "number",
                            "type": "number"
                        },
                        "transactions": {
                            "items": {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "transactionsRoot": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "uncles": {
                            "items": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L253"
            }
        },
        {
            "name": "Filecoin.EthGetBlockReceipts",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetBlockReceipts(p0 context.Context, p1 ethtypes.EthBlockNumberOrHash) ([]*ethtypes.EthTxReceipt, error) {\n\tif s.Internal.EthGetBlockReceipts == nil {\n\t\treturn *new([]*ethtypes.EthTxReceipt), ErrNotSupported\n\t}\n\treturn s.Internal.EthGetBlockReceipts(p0, p1)\n}\n```",
            "summary": "EthGetBlockReceipts retrieves all transaction receipts for a block identified by its number,\nhash or a special tag like \"latest\" or \"finalized\".\nMaps to JSON-RPC method: \"eth_getBlockReceipts\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthBlockNumberOrHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "blockHash": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "blockNumber": {
                                "title": "number",
                                "type": "number"
                            },
                            "requireCanonical": {
                                "type": "boolean"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*ethtypes.EthTxReceipt",
                "description": "[]*ethtypes.EthTxReceipt",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "transactionHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                "transactionIndex": "0x5",
                                "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                "blockNumber": "0x5",
                                "from": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                                "to": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                                "root": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                "status": "0x5",
                                "contractAddress": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                                "cumulativeGasUsed": "0x5",
                                "gasUsed": "0x5",
                                "effectiveGasPrice": "0x0",
                                "logsBloom": "0x07",
                                "logs": [
                                    {
                                        "address": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                                        "data": "0x07",
                                        "topics": [
                                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                                        ],
                                        "removed": true,
                                        "logIndex": "0x5",
                                        "transactionIndex": "0x5",
                                        "transactionHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                        "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                        "blockNumber": "0x5"
                                    }
                                ],
                                "type": "0x5"
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "blockHash": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 32,
                                    "minItems": 32,
                                    "type": "array"
                                },
                                "blockNumber": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "contractAddress": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 20,
                                    "minItems": 20,
                                    "type": "array"
                                },
                                "cumulativeGasUsed": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "effectiveGasPrice": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "from": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 20,
                                    "minItems": 20,
                                    "type": "array"
                                },
                                "gasUsed": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "logs": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "address": {
                                                "items": {
                                                    "description": "Number is a number",
                                                    "title": "number",
                                                    "type": "number"
                                                },
                                                "maxItems": 20,
                                                "minItems": 20,
                                                "type": "array"
                                            },
                                            "blockHash": {
                                                "items": {
                                                    "description": "Number is a number",
                                                    "title": "number",
                                                    "type": "number"
                                                },
                                                "maxItems": 32,
                                                "minItems": 32,
                                                "type": "array"
                                            },
                                            "blockNumber": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "data": {
                                                "items": {
                                                    "description": "Number is a number",
                                                    "title": "number",
                                                    "type": "number"
                                                },
                                                "type": "array"
                                            },
                                            "logIndex": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "removed": {
                                                "type": "boolean"
                                            },
                                            "topics": {
                                                "items": {
                                                    "items": {
                                                        "description": "Number is a number",
                                                        "title": "number",
                                                        "type": "number"
                                                    },
                                                    "maxItems": 32,
                                                    "minItems": 32,
                                                    "type": "array"
                                                },
                                                "type": "array"
                                            },
                                            "transactionHash": {
                                                "items": {
                                                    "description": "Number is a number",
                                                    "title": "number",
                                                    "type": "number"
                                                },
                                                "maxItems": 32,
                                                "minItems": 32,
                                                "type": "array"
                                            },
                                            "transactionIndex": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "logsBloom": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "type": "array"
                                },
                                "root": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 32,
                                    "minItems": 32,
                                    "type": "array"
                                },
                                "status": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "to": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 20,
                                    "minItems": 20,
                                    "type": "array"
                                },
                                "transactionHash": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 32,
                                    "minItems": 32,
                                    "type": "array"
                                },
                                "transactionIndex": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "type": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L264"
            }
        },
        {
            "name": "Filecoin.EthGetBlockReceiptsLimited",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetBlockReceiptsLimited(p0 context.Context, p1 ethtypes.EthBlockNumberOrHash, p2 abi.ChainEpoch) ([]*ethtypes.EthTxReceipt, error) {\n\tif s.Internal.EthGetBlockReceiptsLimited == nil {\n\t\treturn *new([]*ethtypes.EthTxReceipt), ErrNotSupported\n\t}\n\treturn s.Internal.EthGetBlockReceiptsLimited(p0, p1, p2)\n}\n```",
            "summary": "EthGetBlockReceiptsLimited retrieves all transaction receipts for a block identified by its\nnumber, hash or a special tag like \"latest\" or \"finalized\", along with an optional limit on the\nchain epoch for state resolution.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthBlockNumberOrHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "blockHash": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "blockNumber": {
                                "title": "number",
                                "type": "number"
                            },
                            "requireCanonical": {
                                "type": "boolean"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*ethtypes.EthTxReceipt",
                "description": "[]*ethtypes.EthTxReceipt",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "transactionHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                "transactionIndex": "0x5",
                                "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                "blockNumber": "0x5",
                                "from": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                                "to": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                                "root": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                "status": "0x5",
                                "contractAddress": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                                "cumulativeGasUsed": "0x5",
                                "gasUsed": "0x5",
                                "effectiveGasPrice": "0x0",
                                "logsBloom": "0x07",
                                "logs": [
                                    {
                                        "address": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                                        "data": "0x07",
                                        "topics": [
                                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                                        ],
                                        "removed": true,
                                        "logIndex": "0x5",
                                        "transactionIndex": "0x5",
                                        "transactionHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                        "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                        "blockNumber": "0x5"
                                    }
                                ],
                                "type": "0x5"
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "blockHash": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 32,
                                    "minItems": 32,
                                    "type": "array"
                                },
                                "blockNumber": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "contractAddress": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 20,
                                    "minItems": 20,
                                    "type": "array"
                                },
                                "cumulativeGasUsed": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "effectiveGasPrice": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "from": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 20,
                                    "minItems": 20,
                                    "type": "array"
                                },
                                "gasUsed": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "logs": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "address": {
                                                "items": {
                                                    "description": "Number is a number",
                                                    "title": "number",
                                                    "type": "number"
                                                },
                                                "maxItems": 20,
                                                "minItems": 20,
                                                "type": "array"
                                            },
                                            "blockHash": {
                                                "items": {
                                                    "description": "Number is a number",
                                                    "title": "number",
                                                    "type": "number"
                                                },
                                                "maxItems": 32,
                                                "minItems": 32,
                                                "type": "array"
                                            },
                                            "blockNumber": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "data": {
                                                "items": {
                                                    "description": "Number is a number",
                                                    "title": "number",
                                                    "type": "number"
                                                },
                                                "type": "array"
                                            },
                                            "logIndex": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "removed": {
                                                "type": "boolean"
                                            },
                                            "topics": {
                                                "items": {
                                                    "items": {
                                                        "description": "Number is a number",
                                                        "title": "number",
                                                        "type": "number"
                                                    },
                                                    "maxItems": 32,
                                                    "minItems": 32,
                                                    "type": "array"
                                                },
                                                "type": "array"
                                            },
                                            "transactionHash": {
                                                "items": {
                                                    "description": "Number is a number",
                                                    "title": "number",
                                                    "type": "number"
                                                },
                                                "maxItems": 32,
                                                "minItems": 32,
                                                "type": "array"
                                            },
                                            "transactionIndex": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "logsBloom": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "type": "array"
                                },
                                "root": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 32,
                                    "minItems": 32,
                                    "type": "array"
                                },
                                "status": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "to": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 20,
                                    "minItems": 20,
                                    "type": "array"
                                },
                                "transactionHash": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 32,
                                    "minItems": 32,
                                    "type": "array"
                                },
                                "transactionIndex": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "type": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L275"
            }
        },
        {
            "name": "Filecoin.EthGetBlockTransactionCountByHash",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetBlockTransactionCountByHash(p0 context.Context, p1 ethtypes.EthHash) (ethtypes.EthUint64, error) {\n\tif s.Internal.EthGetBlockTransactionCountByHash == nil {\n\t\treturn *new(ethtypes.EthUint64), ErrNotSupported\n\t}\n\treturn s.Internal.EthGetBlockTransactionCountByHash(p0, p1)\n}\n```",
            "summary": "EthGetBlockTransactionCountByHash returns the number of transactions in a block identified by\nits block hash.\nMaps to JSON-RPC method: \"eth_getBlockTransactionCountByHash\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthUint64",
                "description": "ethtypes.EthUint64",
                "summary": "",
                "schema": {
                    "title": "number",
                    "description": "Number is a number",
                    "examples": [
                        "0x5"
                    ],
                    "type": [
                        "number"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L286"
            }
        },
        {
            "name": "Filecoin.EthGetBlockTransactionCountByNumber",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetBlockTransactionCountByNumber(p0 context.Context, p1 string) (ethtypes.EthUint64, error) {\n\tif s.Internal.EthGetBlockTransactionCountByNumber == nil {\n\t\treturn *new(ethtypes.EthUint64), ErrNotSupported\n\t}\n\treturn s.Internal.EthGetBlockTransactionCountByNumber(p0, p1)\n}\n```",
            "summary": "EthGetBlockTransactionCountByNumber returns the number of transactions in a block identified by\nits block number or a special tag like \"latest\" or \"finalized\".\nMaps to JSON-RPC method: \"eth_getBlockTransactionCountByNumber\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthUint64",
                "description": "ethtypes.EthUint64",
                "summary": "",
                "schema": {
                    "title": "number",
                    "description": "Number is a number",
                    "examples": [
                        "0x5"
                    ],
                    "type": [
                        "number"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L297"
            }
        },
        {
            "name": "Filecoin.EthGetCode",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetCode(p0 context.Context, p1 ethtypes.EthAddress, p2 ethtypes.EthBlockNumberOrHash) (ethtypes.EthBytes, error) {\n\tif s.Internal.EthGetCode == nil {\n\t\treturn *new(ethtypes.EthBytes), ErrNotSupported\n\t}\n\treturn s.Internal.EthGetCode(p0, p1, p2)\n}\n```",
            "summary": "EthGetCode retrieves the contract code at a specific address and block state, identified by\nits number, hash, or a special tag like \"latest\" or \"finalized\".\nMaps to JSON-RPC method: \"eth_getCode\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 20,
                        "minItems": 20,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "ethtypes.EthBlockNumberOrHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "blockHash": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "blockNumber": {
                                "title": "number",
                                "type": "number"
                            },
                            "requireCanonical": {
                                "type": "boolean"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthBytes",
                "description": "ethtypes.EthBytes",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x07"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L308"
            }
        },
        {
            "name": "Filecoin.EthGetFilterChanges",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetFilterChanges(p0 context.Context, p1 ethtypes.EthFilterID) (*ethtypes.EthFilterResult, error) {\n\tif s.Internal.EthGetFilterChanges == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.EthGetFilterChanges(p0, p1)\n}\n```",
            "summary": "EthGetFilterChanges retrieves event logs that occurred since the last poll for a filter.\nMaps to JSON-RPC method: \"eth_getFilterChanges\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthFilterID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ethtypes.EthFilterResult",
                "description": "*ethtypes.EthFilterResult",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {}
                        ]
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Results": {
                            "items": {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L319"
            }
        },
        {
            "name": "Filecoin.EthGetFilterLogs",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetFilterLogs(p0 context.Context, p1 ethtypes.EthFilterID) (*ethtypes.EthFilterResult, error) {\n\tif s.Internal.EthGetFilterLogs == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.EthGetFilterLogs(p0, p1)\n}\n```",
            "summary": "EthGetFilterLogs retrieves event logs matching filter with given id.\nMaps to JSON-RPC method: \"eth_getFilterLogs\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthFilterID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ethtypes.EthFilterResult",
                "description": "*ethtypes.EthFilterResult",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {}
                        ]
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Results": {
                            "items": {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L330"
            }
        },
        {
            "name": "Filecoin.EthGetLogs",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetLogs(p0 context.Context, p1 *ethtypes.EthFilterSpec) (*ethtypes.EthFilterResult, error) {\n\tif s.Internal.EthGetLogs == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.EthGetLogs(p0, p1)\n}\n```",
            "summary": "EthGetLogs retrieves event logs matching given filter specification.\nMaps to JSON-RPC method: \"eth_getLogs\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*ethtypes.EthFilterSpec",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "fromBlock": "2301220",
                                "address": [
                                    "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031"
                                ],
                                "topics": null
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "address": {
                                "items": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 20,
                                    "minItems": 20,
                                    "type": "array"
                                },
                                "type": "array"
                            },
                            "blockHash": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "fromBlock": {
                                "type": "string"
                            },
                            "toBlock": {
                                "type": "string"
                            },
                            "topics": {
                                "items": {
                                    "items": {
                                        "items": {
                                            "description": "Number is a number",
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "maxItems": 32,
                                        "minItems": 32,
                                        "type": "array"
                                    },
                                    "type": "array"
                                },
                                "type": "array"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ethtypes.EthFilterResult",
                "description": "*ethtypes.EthFilterResult",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {}
                        ]
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Results": {
                            "items": {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L341"
            }
        },
        {
            "name": "Filecoin.EthGetMessageCidByTransactionHash",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetMessageCidByTransactionHash(p0 context.Context, p1 *ethtypes.EthHash) (*cid.Cid, error) {\n\tif s.Internal.EthGetMessageCidByTransactionHash == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.EthGetMessageCidByTransactionHash(p0, p1)\n}\n```",
            "summary": "EthGetMessageCidByTransactionHash retrieves the Filecoin CID corresponding to an Ethereum\ntransaction hash.\nMaps to JSON-RPC method: \"eth_getMessageCidByTransactionHash\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*ethtypes.EthHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*cid.Cid",
                "description": "*cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L352"
            }
        },
        {
            "name": "Filecoin.EthGetStorageAt",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetStorageAt(p0 context.Context, p1 ethtypes.EthAddress, p2 ethtypes.EthBytes, p3 ethtypes.EthBlockNumberOrHash) (ethtypes.EthBytes, error) {\n\tif s.Internal.EthGetStorageAt == nil {\n\t\treturn *new(ethtypes.EthBytes), ErrNotSupported\n\t}\n\treturn s.Internal.EthGetStorageAt(p0, p1, p2, p3)\n}\n```",
            "summary": "EthGetStorageAt retrieves the storage value at a specific position for a contract\nat a given block state, identified by its number, hash, or a special tag like \"latest\" or\n\"finalized\".\nMaps to JSON-RPC method: \"eth_getStorageAt\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 20,
                        "minItems": 20,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "ethtypes.EthBytes",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x07"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "ethtypes.EthBlockNumberOrHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "blockHash": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "blockNumber": {
                                "title": "number",
                                "type": "number"
                            },
                            "requireCanonical": {
                                "type": "boolean"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthBytes",
                "description": "ethtypes.EthBytes",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x07"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L363"
            }
        },
        {
            "name": "Filecoin.EthGetTransactionByBlockHashAndIndex",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetTransactionByBlockHashAndIndex(p0 context.Context, p1 ethtypes.EthHash, p2 ethtypes.EthUint64) (*ethtypes.EthTx, error) {\n\tif s.Internal.EthGetTransactionByBlockHashAndIndex == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.EthGetTransactionByBlockHashAndIndex(p0, p1, p2)\n}\n```",
            "summary": "EthGetTransactionByBlockHashAndIndex retrieves a transaction by its block hash and index.\nMaps to JSON-RPC method: \"eth_getTransactionByBlockHashAndIndex\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "ethtypes.EthUint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            "0x5"
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ethtypes.EthTx",
                "description": "*ethtypes.EthTx",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "chainId": "0x5",
                            "nonce": "0x5",
                            "hash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "blockNumber": "0x5",
                            "transactionIndex": "0x5",
                            "from": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "to": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "value": "0x0",
                            "type": "0x5",
                            "input": "0x07",
                            "gas": "0x5",
                            "maxFeePerGas": "0x0",
                            "maxPriorityFeePerGas": "0x0",
                            "gasPrice": "0x0",
                            "accessList": [
                                "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                            ],
                            "v": "0x0",
                            "r": "0x0",
                            "s": "0x0"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "accessList": {
                            "items": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "type": "array"
                        },
                        "blockHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "blockNumber": {
                            "title": "number",
                            "type": "number"
                        },
                        "chainId": {
                            "title": "number",
                            "type": "number"
                        },
                        "from": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "gas": {
                            "title": "number",
                            "type": "number"
                        },
                        "gasPrice": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "hash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "input": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "maxFeePerGas": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "maxPriorityFeePerGas": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "nonce": {
                            "title": "number",
                            "type": "number"
                        },
                        "r": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "s": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "to": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "transactionIndex": {
                            "title": "number",
                            "type": "number"
                        },
                        "type": {
                            "title": "number",
                            "type": "number"
                        },
                        "v": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "value": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L374"
            }
        },
        {
            "name": "Filecoin.EthGetTransactionByBlockNumberAndIndex",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetTransactionByBlockNumberAndIndex(p0 context.Context, p1 string, p2 ethtypes.EthUint64) (*ethtypes.EthTx, error) {\n\tif s.Internal.EthGetTransactionByBlockNumberAndIndex == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.EthGetTransactionByBlockNumberAndIndex(p0, p1, p2)\n}\n```",
            "summary": "EthGetTransactionByBlockNumberAndIndex retrieves a transaction by its block number and index.\nMaps to JSON-RPC method: \"eth_getTransactionByBlockNumberAndIndex\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "ethtypes.EthUint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            "0x5"
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ethtypes.EthTx",
                "description": "*ethtypes.EthTx",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "chainId": "0x5",
                            "nonce": "0x5",
                            "hash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "blockNumber": "0x5",
                            "transactionIndex": "0x5",
                            "from": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "to": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "value": "0x0",
                            "type": "0x5",
                            "input": "0x07",
                            "gas": "0x5",
                            "maxFeePerGas": "0x0",
                            "maxPriorityFeePerGas": "0x0",
                            "gasPrice": "0x0",
                            "accessList": [
                                "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                            ],
                            "v": "0x0",
                            "r": "0x0",
                            "s": "0x0"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "accessList": {
                            "items": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "type": "array"
                        },
                        "blockHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "blockNumber": {
                            "title": "number",
                            "type": "number"
                        },
                        "chainId": {
                            "title": "number",
                            "type": "number"
                        },
                        "from": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "gas": {
                            "title": "number",
                            "type": "number"
                        },
                        "gasPrice": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "hash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "input": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "maxFeePerGas": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "maxPriorityFeePerGas": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "nonce": {
                            "title": "number",
                            "type": "number"
                        },
                        "r": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "s": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "to": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "transactionIndex": {
                            "title": "number",
                            "type": "number"
                        },
                        "type": {
                            "title": "number",
                            "type": "number"
                        },
                        "v": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "value": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L385"
            }
        },
        {
            "name": "Filecoin.EthGetTransactionByHash",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetTransactionByHash(p0 context.Context, p1 *ethtypes.EthHash) (*ethtypes.EthTx, error) {\n\tif s.Internal.EthGetTransactionByHash == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.EthGetTransactionByHash(p0, p1)\n}\n```",
            "summary": "EthGetTransactionByHash retrieves a transaction by its hash.\nMaps to JSON-RPC method: \"eth_getTransactionByHash\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*ethtypes.EthHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ethtypes.EthTx",
                "description": "*ethtypes.EthTx",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "chainId": "0x5",
                            "nonce": "0x5",
                            "hash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "blockNumber": "0x5",
                            "transactionIndex": "0x5",
                            "from": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "to": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "value": "0x0",
                            "type": "0x5",
                            "input": "0x07",
                            "gas": "0x5",
                            "maxFeePerGas": "0x0",
                            "maxPriorityFeePerGas": "0x0",
                            "gasPrice": "0x0",
                            "accessList": [
                                "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                            ],
                            "v": "0x0",
                            "r": "0x0",
                            "s": "0x0"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "accessList": {
                            "items": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "type": "array"
                        },
                        "blockHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "blockNumber": {
                            "title": "number",
                            "type": "number"
                        },
                        "chainId": {
                            "title": "number",
                            "type": "number"
                        },
                        "from": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "gas": {
                            "title": "number",
                            "type": "number"
                        },
                        "gasPrice": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "hash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "input": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "maxFeePerGas": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "maxPriorityFeePerGas": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "nonce": {
                            "title": "number",
                            "type": "number"
                        },
                        "r": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "s": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "to": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "transactionIndex": {
                            "title": "number",
                            "type": "number"
                        },
                        "type": {
                            "title": "number",
                            "type": "number"
                        },
                        "v": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "value": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L396"
            }
        },
        {
            "name": "Filecoin.EthGetTransactionByHashLimited",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetTransactionByHashLimited(p0 context.Context, p1 *ethtypes.EthHash, p2 abi.ChainEpoch) (*ethtypes.EthTx, error) {\n\tif s.Internal.EthGetTransactionByHashLimited == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.EthGetTransactionByHashLimited(p0, p1, p2)\n}\n```",
            "summary": "EthGetTransactionByHashLimited retrieves a transaction by its hash, with an optional limit on\nthe chain epoch for state resolution.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*ethtypes.EthHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ethtypes.EthTx",
                "description": "*ethtypes.EthTx",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "chainId": "0x5",
                            "nonce": "0x5",
                            "hash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "blockNumber": "0x5",
                            "transactionIndex": "0x5",
                            "from": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "to": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "value": "0x0",
                            "type": "0x5",
                            "input": "0x07",
                            "gas": "0x5",
                            "maxFeePerGas": "0x0",
                            "maxPriorityFeePerGas": "0x0",
                            "gasPrice": "0x0",
                            "accessList": [
                                "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                            ],
                            "v": "0x0",
                            "r": "0x0",
                            "s": "0x0"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "accessList": {
                            "items": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "type": "array"
                        },
                        "blockHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "blockNumber": {
                            "title": "number",
                            "type": "number"
                        },
                        "chainId": {
                            "title": "number",
                            "type": "number"
                        },
                        "from": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "gas": {
                            "title": "number",
                            "type": "number"
                        },
                        "gasPrice": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "hash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "input": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "maxFeePerGas": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "maxPriorityFeePerGas": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "nonce": {
                            "title": "number",
                            "type": "number"
                        },
                        "r": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "s": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "to": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "transactionIndex": {
                            "title": "number",
                            "type": "number"
                        },
                        "type": {
                            "title": "number",
                            "type": "number"
                        },
                        "v": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "value": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L407"
            }
        },
        {
            "name": "Filecoin.EthGetTransactionCount",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetTransactionCount(p0 context.Context, p1 ethtypes.EthAddress, p2 ethtypes.EthBlockNumberOrHash) (ethtypes.EthUint64, error) {\n\tif s.Internal.EthGetTransactionCount == nil {\n\t\treturn *new(ethtypes.EthUint64), ErrNotSupported\n\t}\n\treturn s.Internal.EthGetTransactionCount(p0, p1, p2)\n}\n```",
            "summary": "EthGetTransactionCount retrieves the number of transactions sent from an address at a specific\nblock, identified by its number, hash, or a special tag like \"latest\" or \"finalized\".\nMaps to JSON-RPC method: \"eth_getTransactionCount\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 20,
                        "minItems": 20,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "ethtypes.EthBlockNumberOrHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "blockHash": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "blockNumber": {
                                "title": "number",
                                "type": "number"
                            },
                            "requireCanonical": {
                                "type": "boolean"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthUint64",
                "description": "ethtypes.EthUint64",
                "summary": "",
                "schema": {
                    "title": "number",
                    "description": "Number is a number",
                    "examples": [
                        "0x5"
                    ],
                    "type": [
                        "number"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L418"
            }
        },
        {
            "name": "Filecoin.EthGetTransactionHashByCid",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetTransactionHashByCid(p0 context.Context, p1 cid.Cid) (*ethtypes.EthHash, error) {\n\tif s.Internal.EthGetTransactionHashByCid == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.EthGetTransactionHashByCid(p0, p1)\n}\n```",
            "summary": "EthGetTransactionHashByCid retrieves the Ethereum transaction hash corresponding to a Filecoin\nCID.\nMaps to JSON-RPC method: \"eth_getTransactionHashByCid\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ethtypes.EthHash",
                "description": "*ethtypes.EthHash",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "maxItems": 32,
                    "minItems": 32,
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L429"
            }
        },
        {
            "name": "Filecoin.EthGetTransactionReceipt",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetTransactionReceipt(p0 context.Context, p1 ethtypes.EthHash) (*ethtypes.EthTxReceipt, error) {\n\tif s.Internal.EthGetTransactionReceipt == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.EthGetTransactionReceipt(p0, p1)\n}\n```",
            "summary": "EthGetTransactionReceipt retrieves the receipt of a transaction by its hash.\nMaps to JSON-RPC method: \"eth_getTransactionReceipt\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ethtypes.EthTxReceipt",
                "description": "*ethtypes.EthTxReceipt",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "transactionHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "transactionIndex": "0x5",
                            "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "blockNumber": "0x5",
                            "from": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "to": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "root": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "status": "0x5",
                            "contractAddress": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "cumulativeGasUsed": "0x5",
                            "gasUsed": "0x5",
                            "effectiveGasPrice": "0x0",
                            "logsBloom": "0x07",
                            "logs": [
                                {
                                    "address": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                                    "data": "0x07",
                                    "topics": [
                                        "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                                    ],
                                    "removed": true,
                                    "logIndex": "0x5",
                                    "transactionIndex": "0x5",
                                    "transactionHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                    "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                    "blockNumber": "0x5"
                                }
                            ],
                            "type": "0x5"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "blockHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "blockNumber": {
                            "title": "number",
                            "type": "number"
                        },
                        "contractAddress": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "cumulativeGasUsed": {
                            "title": "number",
                            "type": "number"
                        },
                        "effectiveGasPrice": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "from": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "gasUsed": {
                            "title": "number",
                            "type": "number"
                        },
                        "logs": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "address": {
                                        "items": {
                                            "description": "Number is a number",
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "maxItems": 20,
                                        "minItems": 20,
                                        "type": "array"
                                    },
                                    "blockHash": {
                                        "items": {
                                            "description": "Number is a number",
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "maxItems": 32,
                                        "minItems": 32,
                                        "type": "array"
                                    },
                                    "blockNumber": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "data": {
                                        "items": {
                                            "description": "Number is a number",
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "type": "array"
                                    },
                                    "logIndex": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "removed": {
                                        "type": "boolean"
                                    },
                                    "topics": {
                                        "items": {
                                            "items": {
                                                "description": "Number is a number",
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "maxItems": 32,
                                            "minItems": 32,
                                            "type": "array"
                                        },
                                        "type": "array"
                                    },
                                    "transactionHash": {
                                        "items": {
                                            "description": "Number is a number",
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "maxItems": 32,
                                        "minItems": 32,
                                        "type": "array"
                                    },
                                    "transactionIndex": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "logsBloom": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "root": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "status": {
                            "title": "number",
                            "type": "number"
                        },
                        "to": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "transactionHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "transactionIndex": {
                            "title": "number",
                            "type": "number"
                        },
                        "type": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L440"
            }
        },
        {
            "name": "Filecoin.EthGetTransactionReceiptLimited",
            "description": "```go\nfunc (s *FullNodeStruct) EthGetTransactionReceiptLimited(p0 context.Context, p1 ethtypes.EthHash, p2 abi.ChainEpoch) (*ethtypes.EthTxReceipt, error) {\n\tif s.Internal.EthGetTransactionReceiptLimited == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.EthGetTransactionReceiptLimited(p0, p1, p2)\n}\n```",
            "summary": "EthGetTransactionReceiptLimited retrieves the receipt of a transaction by its hash, with an\noptional limit on the chain epoch for state resolution.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ethtypes.EthTxReceipt",
                "description": "*ethtypes.EthTxReceipt",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "transactionHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "transactionIndex": "0x5",
                            "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "blockNumber": "0x5",
                            "from": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "to": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "root": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "status": "0x5",
                            "contractAddress": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "cumulativeGasUsed": "0x5",
                            "gasUsed": "0x5",
                            "effectiveGasPrice": "0x0",
                            "logsBloom": "0x07",
                            "logs": [
                                {
                                    "address": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                                    "data": "0x07",
                                    "topics": [
                                        "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                                    ],
                                    "removed": true,
                                    "logIndex": "0x5",
                                    "transactionIndex": "0x5",
                                    "transactionHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                    "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                    "blockNumber": "0x5"
                                }
                            ],
                            "type": "0x5"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "blockHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "blockNumber": {
                            "title": "number",
                            "type": "number"
                        },
                        "contractAddress": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "cumulativeGasUsed": {
                            "title": "number",
                            "type": "number"
                        },
                        "effectiveGasPrice": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "from": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "gasUsed": {
                            "title": "number",
                            "type": "number"
                        },
                        "logs": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "address": {
                                        "items": {
                                            "description": "Number is a number",
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "maxItems": 20,
                                        "minItems": 20,
                                        "type": "array"
                                    },
                                    "blockHash": {
                                        "items": {
                                            "description": "Number is a number",
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "maxItems": 32,
                                        "minItems": 32,
                                        "type": "array"
                                    },
                                    "blockNumber": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "data": {
                                        "items": {
                                            "description": "Number is a number",
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "type": "array"
                                    },
                                    "logIndex": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "removed": {
                                        "type": "boolean"
                                    },
                                    "topics": {
                                        "items": {
                                            "items": {
                                                "description": "Number is a number",
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "maxItems": 32,
                                            "minItems": 32,
                                            "type": "array"
                                        },
                                        "type": "array"
                                    },
                                    "transactionHash": {
                                        "items": {
                                            "description": "Number is a number",
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "maxItems": 32,
                                        "minItems": 32,
                                        "type": "array"
                                    },
                                    "transactionIndex": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "logsBloom": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "root": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "status": {
                            "title": "number",
                            "type": "number"
                        },
                        "to": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "transactionHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "transactionIndex": {
                            "title": "number",
                            "type": "number"
                        },
                        "type": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L451"
            }
        },
        {
            "name": "Filecoin.EthMaxPriorityFeePerGas",
            "description": "```go\nfunc (s *FullNodeStruct) EthMaxPriorityFeePerGas(p0 context.Context) (ethtypes.EthBigInt, error) {\n\tif s.Internal.EthMaxPriorityFeePerGas == nil {\n\t\treturn *new(ethtypes.EthBigInt), ErrNotSupported\n\t}\n\treturn s.Internal.EthMaxPriorityFeePerGas(p0)\n}\n```",
            "summary": "EthMaxPriorityFeePerGas retrieves the maximum priority fee per gas in the network.\nMaps to JSON-RPC method: \"eth_maxPriorityFeePerGas\".\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "ethtypes.EthBigInt",
                "description": "ethtypes.EthBigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L462"
            }
        },
        {
            "name": "Filecoin.EthNewBlockFilter",
            "description": "```go\nfunc (s *FullNodeStruct) EthNewBlockFilter(p0 context.Context) (ethtypes.EthFilterID, error) {\n\tif s.Internal.EthNewBlockFilter == nil {\n\t\treturn *new(ethtypes.EthFilterID), ErrNotSupported\n\t}\n\treturn s.Internal.EthNewBlockFilter(p0)\n}\n```",
            "summary": "EthNewBlockFilter installs a persistent filter to notify when a new block arrives.\nMaps to JSON-RPC method: \"eth_newBlockFilter\".\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "ethtypes.EthFilterID",
                "description": "ethtypes.EthFilterID",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "maxItems": 32,
                    "minItems": 32,
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L473"
            }
        },
        {
            "name": "Filecoin.EthNewFilter",
            "description": "```go\nfunc (s *FullNodeStruct) EthNewFilter(p0 context.Context, p1 *ethtypes.EthFilterSpec) (ethtypes.EthFilterID, error) {\n\tif s.Internal.EthNewFilter == nil {\n\t\treturn *new(ethtypes.EthFilterID), ErrNotSupported\n\t}\n\treturn s.Internal.EthNewFilter(p0, p1)\n}\n```",
            "summary": "EthNewFilter installs a persistent filter based on given filter specification.\nMaps to JSON-RPC method: \"eth_newFilter\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*ethtypes.EthFilterSpec",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "fromBlock": "2301220",
                                "address": [
                                    "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031"
                                ],
                                "topics": null
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "address": {
                                "items": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 20,
                                    "minItems": 20,
                                    "type": "array"
                                },
                                "type": "array"
                            },
                            "blockHash": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "fromBlock": {
                                "type": "string"
                            },
                            "toBlock": {
                                "type": "string"
                            },
                            "topics": {
                                "items": {
                                    "items": {
                                        "items": {
                                            "description": "Number is a number",
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "maxItems": 32,
                                        "minItems": 32,
                                        "type": "array"
                                    },
                                    "type": "array"
                                },
                                "type": "array"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthFilterID",
                "description": "ethtypes.EthFilterID",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "maxItems": 32,
                    "minItems": 32,
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L484"
            }
        },
        {
            "name": "Filecoin.EthNewPendingTransactionFilter",
            "description": "```go\nfunc (s *FullNodeStruct) EthNewPendingTransactionFilter(p0 context.Context) (ethtypes.EthFilterID, error) {\n\tif s.Internal.EthNewPendingTransactionFilter == nil {\n\t\treturn *new(ethtypes.EthFilterID), ErrNotSupported\n\t}\n\treturn s.Internal.EthNewPendingTransactionFilter(p0)\n}\n```",
            "summary": "EthNewPendingTransactionFilter installs a persistent filter to notify when new messages arrive\nin the message pool.\nMaps to JSON-RPC method: \"eth_newPendingTransactionFilter\".\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "ethtypes.EthFilterID",
                "description": "ethtypes.EthFilterID",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "maxItems": 32,
                    "minItems": 32,
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L495"
            }
        },
        {
            "name": "Filecoin.EthProtocolVersion",
            "description": "```go\nfunc (s *FullNodeStruct) EthProtocolVersion(p0 context.Context) (ethtypes.EthUint64, error) {\n\tif s.Internal.EthProtocolVersion == nil {\n\t\treturn *new(ethtypes.EthUint64), ErrNotSupported\n\t}\n\treturn s.Internal.EthProtocolVersion(p0)\n}\n```",
            "summary": "EthProtocolVersion retrieves the Ethereum protocol version supported by the node.\nMaps to JSON-RPC method: \"eth_protocolVersion\".\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "ethtypes.EthUint64",
                "description": "ethtypes.EthUint64",
                "summary": "",
                "schema": {
                    "title": "number",
                    "description": "Number is a number",
                    "examples": [
                        "0x5"
                    ],
                    "type": [
                        "number"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L506"
            }
        },
        {
            "name": "Filecoin.EthSendRawTransaction",
            "description": "```go\nfunc (s *FullNodeStruct) EthSendRawTransaction(p0 context.Context, p1 ethtypes.EthBytes) (ethtypes.EthHash, error) {\n\tif s.Internal.EthSendRawTransaction == nil {\n\t\treturn *new(ethtypes.EthHash), ErrNotSupported\n\t}\n\treturn s.Internal.EthSendRawTransaction(p0, p1)\n}\n```",
            "summary": "EthSendRawTransaction submits a raw Ethereum transaction to the network.\nMaps to JSON-RPC method: \"eth_sendRawTransaction\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthBytes",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x07"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthHash",
                "description": "ethtypes.EthHash",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "maxItems": 32,
                    "minItems": 32,
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L517"
            }
        },
        {
            "name": "Filecoin.EthSendRawTransactionUntrusted",
            "description": "```go\nfunc (s *FullNodeStruct) EthSendRawTransactionUntrusted(p0 context.Context, p1 ethtypes.EthBytes) (ethtypes.EthHash, error) {\n\tif s.Internal.EthSendRawTransactionUntrusted == nil {\n\t\treturn *new(ethtypes.EthHash), ErrNotSupported\n\t}\n\treturn s.Internal.EthSendRawTransactionUntrusted(p0, p1)\n}\n```",
            "summary": "EthSendRawTransactionUntrusted submits a raw Ethereum transaction from an untrusted source.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthBytes",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x07"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthHash",
                "description": "ethtypes.EthHash",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "maxItems": 32,
                    "minItems": 32,
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L528"
            }
        },
        {
            "name": "Filecoin.EthSubscribe",
            "description": "```go\nfunc (s *FullNodeStruct) EthSubscribe(p0 context.Context, p1 jsonrpc.RawParams) (ethtypes.EthSubscriptionID, error) {\n\tif s.Internal.EthSubscribe == nil {\n\t\treturn *new(ethtypes.EthSubscriptionID), ErrNotSupported\n\t}\n\treturn s.Internal.EthSubscribe(p0, p1)\n}\n```",
            "summary": "EthSubscribe subscribes to different event types using websockets.\nMaps to JSON-RPC method: \"eth_subscribe\".\n\neventTypes is one or more of:\n - newHeads: notify when new blocks arrive.\n - pendingTransactions: notify when new messages arrive in the message pool.\n - logs: notify new event logs that match a criteria\n\nparams contains additional parameters used with the log event type\nThe client will receive a stream of EthSubscriptionResponse values until EthUnsubscribe is called.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "jsonrpc.RawParams",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Bw=="
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthSubscriptionID",
                "description": "ethtypes.EthSubscriptionID",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "maxItems": 32,
                    "minItems": 32,
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L539"
            }
        },
        {
            "name": "Filecoin.EthSyncing",
            "description": "```go\nfunc (s *FullNodeStruct) EthSyncing(p0 context.Context) (ethtypes.EthSyncingResult, error) {\n\tif s.Internal.EthSyncing == nil {\n\t\treturn *new(ethtypes.EthSyncingResult), ErrNotSupported\n\t}\n\treturn s.Internal.EthSyncing(p0)\n}\n```",
            "summary": "EthSyncing checks if the node is currently syncing and returns the sync status.\nMaps to JSON-RPC method: \"eth_syncing\".\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "ethtypes.EthSyncingResult",
                "description": "ethtypes.EthSyncingResult",
                "summary": "",
                "schema": {
                    "examples": [
                        false
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "CurrentBlock": {
                            "title": "number",
                            "type": "number"
                        },
                        "DoneSync": {
                            "type": "boolean"
                        },
                        "HighestBlock": {
                            "title": "number",
                            "type": "number"
                        },
                        "StartingBlock": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L550"
            }
        },
        {
            "name": "Filecoin.EthTraceBlock",
            "description": "```go\nfunc (s *FullNodeStruct) EthTraceBlock(p0 context.Context, p1 string) ([]*ethtypes.EthTraceBlock, error) {\n\tif s.Internal.EthTraceBlock == nil {\n\t\treturn *new([]*ethtypes.EthTraceBlock), ErrNotSupported\n\t}\n\treturn s.Internal.EthTraceBlock(p0, p1)\n}\n```",
            "summary": "EthTraceBlock returns an OpenEthereum-compatible trace of the given block.\nMaps to JSON-RPC method: \"trace_block\".\n\nTranslates Filecoin semantics into Ethereum semantics and traces both EVM and FVM calls.\n\nFeatures:\n\n- FVM actor create events, calls, etc. show up as if they were EVM smart contract events.\n- Native FVM call inputs are ABI-encoded (Solidity ABI) as if they were calls to a\n  `handle_filecoin_method(uint64 method, uint64 codec, bytes params)` function\n  (where `codec` is the IPLD codec of `params`).\n- Native FVM call outputs (return values) are ABI-encoded as `(uint32 exit_code, uint64\n  codec, bytes output)` where `codec` is the IPLD codec of `output`.\n\nLimitations (for now):\n\n1. Block rewards are not included in the trace.\n2. SELFDESTRUCT operations are not included in the trace.\n3. EVM smart contract \"create\" events always specify `0xfe` as the \"code\" for newly created EVM\n   smart contracts.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*ethtypes.EthTraceBlock",
                "description": "[]*ethtypes.EthTraceBlock",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "type": "string value",
                                "error": "string value",
                                "subtraces": 123,
                                "traceAddress": [
                                    123
                                ],
                                "action": {},
                                "result": {},
                                "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                "blockNumber": 9,
                                "transactionHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                "transactionPosition": 123
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "action": {
                                    "additionalProperties": true,
                                    "type": "object"
                                },
                                "blockHash": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 32,
                                    "minItems": 32,
                                    "type": "array"
                                },
                                "blockNumber": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "error": {
                                    "type": "string"
                                },
                                "result": {
                                    "additionalProperties": true,
                                    "type": "object"
                                },
                                "subtraces": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "traceAddress": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "type": "array"
                                },
                                "transactionHash": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 32,
                                    "minItems": 32,
                                    "type": "array"
                                },
                                "transactionPosition": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L561"
            }
        },
        {
            "name": "Filecoin.EthTraceFilter",
            "description": "```go\nfunc (s *FullNodeStruct) EthTraceFilter(p0 context.Context, p1 ethtypes.EthTraceFilterCriteria) ([]*ethtypes.EthTraceFilterResult, error) {\n\tif s.Internal.EthTraceFilter == nil {\n\t\treturn *new([]*ethtypes.EthTraceFilterResult), ErrNotSupported\n\t}\n\treturn s.Internal.EthTraceFilter(p0, p1)\n}\n```",
            "summary": "EthTraceFilter returns traces matching the given filter criteria.\nMaps to JSON-RPC method: \"trace_filter\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthTraceFilterCriteria",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "fromBlock": "latest",
                                "toBlock": "latest",
                                "fromAddress": [
                                    "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031"
                                ],
                                "toAddress": [
                                    "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031"
                                ],
                                "after": "0x0",
                                "count": "0x64"
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "after": {
                                "title": "number",
                                "type": "number"
                            },
                            "count": {
                                "title": "number",
                                "type": "number"
                            },
                            "fromAddress": {
                                "items": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 20,
                                    "minItems": 20,
                                    "type": "array"
                                },
                                "type": "array"
                            },
                            "fromBlock": {
                                "type": "string"
                            },
                            "toAddress": {
                                "items": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 20,
                                    "minItems": 20,
                                    "type": "array"
                                },
                                "type": "array"
                            },
                            "toBlock": {
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*ethtypes.EthTraceFilterResult",
                "description": "[]*ethtypes.EthTraceFilterResult",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "type": "string value",
                                "error": "string value",
                                "subtraces": 123,
                                "traceAddress": [
                                    123
                                ],
                                "action": {},
                                "result": {},
                                "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                "blockNumber": 9,
                                "transactionHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                "transactionPosition": 123
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "action": {
                                    "additionalProperties": true,
                                    "type": "object"
                                },
                                "blockHash": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 32,
                                    "minItems": 32,
                                    "type": "array"
                                },
                                "blockNumber": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "error": {
                                    "type": "string"
                                },
                                "result": {
                                    "additionalProperties": true,
                                    "type": "object"
                                },
                                "subtraces": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "traceAddress": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "type": "array"
                                },
                                "transactionHash": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 32,
                                    "minItems": 32,
                                    "type": "array"
                                },
                                "transactionPosition": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L572"
            }
        },
        {
            "name": "Filecoin.EthTraceReplayBlockTransactions",
            "description": "```go\nfunc (s *FullNodeStruct) EthTraceReplayBlockTransactions(p0 context.Context, p1 string, p2 []string) ([]*ethtypes.EthTraceReplayBlockTransaction, error) {\n\tif s.Internal.EthTraceReplayBlockTransactions == nil {\n\t\treturn *new([]*ethtypes.EthTraceReplayBlockTransaction), ErrNotSupported\n\t}\n\treturn s.Internal.EthTraceReplayBlockTransactions(p0, p1, p2)\n}\n```",
            "summary": "EthTraceReplayBlockTransactions replays all transactions in a block returning the requested\ntraces for each transaction.\nMaps to JSON-RPC method: \"trace_replayBlockTransactions\".\n\nThe block can be identified by its number, hash or a special tag like \"latest\" or \"finalized\".\nThe `traceTypes` parameter allows filtering the traces based on their types.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "[]string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                "string value"
                            ]
                        ],
                        "items": [
                            {
                                "type": [
                                    "string"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*ethtypes.EthTraceReplayBlockTransaction",
                "description": "[]*ethtypes.EthTraceReplayBlockTransaction",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "output": "0x07",
                                "stateDiff": "string value",
                                "trace": [
                                    {
                                        "type": "string value",
                                        "error": "string value",
                                        "subtraces": 123,
                                        "traceAddress": [
                                            123
                                        ],
                                        "action": {},
                                        "result": {}
                                    }
                                ],
                                "transactionHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                "vmTrace": "string value"
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "output": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "type": "array"
                                },
                                "stateDiff": {
                                    "type": "string"
                                },
                                "trace": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "action": {
                                                "additionalProperties": true,
                                                "type": "object"
                                            },
                                            "error": {
                                                "type": "string"
                                            },
                                            "result": {
                                                "additionalProperties": true,
                                                "type": "object"
                                            },
                                            "subtraces": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "traceAddress": {
                                                "items": {
                                                    "description": "Number is a number",
                                                    "title": "number",
                                                    "type": "number"
                                                },
                                                "type": "array"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "transactionHash": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 32,
                                    "minItems": 32,
                                    "type": "array"
                                },
                                "vmTrace": {
                                    "type": "string"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L583"
            }
        },
        {
            "name": "Filecoin.EthTraceTransaction",
            "description": "```go\nfunc (s *FullNodeStruct) EthTraceTransaction(p0 context.Context, p1 string) ([]*ethtypes.EthTraceTransaction, error) {\n\tif s.Internal.EthTraceTransaction == nil {\n\t\treturn *new([]*ethtypes.EthTraceTransaction), ErrNotSupported\n\t}\n\treturn s.Internal.EthTraceTransaction(p0, p1)\n}\n```",
            "summary": "EthTraceTransaction returns an OpenEthereum-compatible trace of a specific transaction.\nMaps to JSON-RPC method: \"trace_transaction\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*ethtypes.EthTraceTransaction",
                "description": "[]*ethtypes.EthTraceTransaction",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "type": "string value",
                                "error": "string value",
                                "subtraces": 123,
                                "traceAddress": [
                                    123
                                ],
                                "action": {},
                                "result": {},
                                "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                "blockNumber": 9,
                                "transactionHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                "transactionPosition": 123
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "action": {
                                    "additionalProperties": true,
                                    "type": "object"
                                },
                                "blockHash": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 32,
                                    "minItems": 32,
                                    "type": "array"
                                },
                                "blockNumber": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "error": {
                                    "type": "string"
                                },
                                "result": {
                                    "additionalProperties": true,
                                    "type": "object"
                                },
                                "subtraces": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "traceAddress": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "type": "array"
                                },
                                "transactionHash": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 32,
                                    "minItems": 32,
                                    "type": "array"
                                },
                                "transactionPosition": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L594"
            }
        },
        {
            "name": "Filecoin.EthUninstallFilter",
            "description": "```go\nfunc (s *FullNodeStruct) EthUninstallFilter(p0 context.Context, p1 ethtypes.EthFilterID) (bool, error) {\n\tif s.Internal.EthUninstallFilter == nil {\n\t\treturn false, ErrNotSupported\n\t}\n\treturn s.Internal.EthUninstallFilter(p0, p1)\n}\n```",
            "summary": "EthUninstallFilter uninstalls a filter with given id.\nMaps to JSON-RPC method: \"eth_uninstallFilter\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthFilterID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L605"
            }
        },
        {
            "name": "Filecoin.EthUnsubscribe",
            "description": "```go\nfunc (s *FullNodeStruct) EthUnsubscribe(p0 context.Context, p1 ethtypes.EthSubscriptionID) (bool, error) {\n\tif s.Internal.EthUnsubscribe == nil {\n\t\treturn false, ErrNotSupported\n\t}\n\treturn s.Internal.EthUnsubscribe(p0, p1)\n}\n```",
            "summary": "EthUnsubscribe unsubscribes from a websocket subscription.\nMaps to JSON-RPC method: \"eth_unsubscribe\".\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthSubscriptionID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L616"
            }
        },
        {
            "name": "Filecoin.FilecoinAddressToEthAddress",
            "description": "```go\nfunc (s *FullNodeStruct) FilecoinAddressToEthAddress(p0 context.Context, p1 jsonrpc.RawParams) (ethtypes.EthAddress, error) {\n\tif s.Internal.FilecoinAddressToEthAddress == nil {\n\t\treturn *new(ethtypes.EthAddress), ErrNotSupported\n\t}\n\treturn s.Internal.FilecoinAddressToEthAddress(p0, p1)\n}\n```",
            "summary": "FilecoinAddressToEthAddress converts any Filecoin address to an EthAddress.\n\nThis method supports all Filecoin address types:\n- \"f0\" and \"f4\" addresses: Converted directly.\n- \"f1\", \"f2\", and \"f3\" addresses: First converted to their corresponding \"f0\" ID address, then to an EthAddress.\n\nRequirements:\n- For \"f1\", \"f2\", and \"f3\" addresses, they must be instantiated on-chain, as \"f0\" ID addresses are only assigned to actors when they are created on-chain.\nThe simplest way to instantiate an address on chain is to send a transaction to the address.\n\nNote on chain reorganizations:\n\"f0\" ID addresses are not permanent and can be affected by chain reorganizations. To account for this,\nthe API includes a `blkNum` parameter, which specifies the block number that is used to determine the tipset state to use for converting an\n\"f1\"/\"f2\"/\"f3\" address to an \"f0\" address. This parameter functions similarly to the `blkNum` parameter in the existing `EthGetBlockByNumber` API.\nSee https://docs.alchemy.com/reference/eth-getblockbynumber for more details.\n\nParameters:\n- ctx: The context for the API call.\n- filecoinAddress: The Filecoin address to convert.\n- blkNum: The block number or state for the conversion. Defaults to \"finalized\" for maximum safety.\n  Possible values: \"pending\", \"latest\", \"finalized\", \"safe\", or a specific block number represented as hex.\n\nReturns:\n- The corresponding EthAddress.\n- An error if the conversion fails.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "jsonrpc.RawParams",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Bw=="
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthAddress",
                "description": "ethtypes.EthAddress",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "maxItems": 20,
                    "minItems": 20,
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L627"
            }
        },
        {
            "name": "Filecoin.NetListening",
            "description": "```go\nfunc (s *FullNodeStruct) NetListening(p0 context.Context) (bool, error) {\n\tif s.Internal.NetListening == nil {\n\t\treturn false, ErrNotSupported\n\t}\n\treturn s.Internal.NetListening(p0)\n}\n```",
            "summary": "NetListening checks if the node is actively listening for network connections.\nMaps to JSON-RPC method: \"net_listening\".\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L638"
            }
        },
        {
            "name": "Filecoin.NetVersion",
            "description": "```go\nfunc (s *FullNodeStruct) NetVersion(p0 context.Context) (string, error) {\n\tif s.Internal.NetVersion == nil {\n\t\treturn \"\", ErrNotSupported\n\t}\n\treturn s.Internal.NetVersion(p0)\n}\n```",
            "summary": "NetVersion retrieves the current network ID.\nMaps to JSON-RPC method: \"net_version\".\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "string",
                "description": "string",
                "summary": "",
                "schema": {
                    "examples": [
                        "string value"
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L649"
            }
        },
        {
            "name": "Filecoin.StateGetActor",
            "description": "```go\nfunc (s *FullNodeStruct) StateGetActor(p0 context.Context, p1 address.Address, p2 types.TipSetSelector) (*types.Actor, error) {\n\tif s.Internal.StateGetActor == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateGetActor(p0, p1, p2)\n}\n```",
            "summary": "StateGetActor retrieves the actor information for the specified address at the\nselected tipset.\n\nThis function returns the on-chain Actor object including:\n  - Code CID (determines the actor's type)\n  - State root CID\n  - Balance in attoFIL\n  - Nonce (for account actors)\n\nThe TipSetSelector parameter provides flexible options for selecting the tipset:\n  - TipSetSelectors.Latest: the most recent tipset with the heaviest weight\n  - TipSetSelectors.Finalized: the most recent finalized tipset\n  - TipSetSelectors.Height(epoch, previous, anchor): tipset at the specified height\n  - TipSetSelectors.Key(key): tipset with the specified key\n\nSee types.TipSetSelector documentation for additional details.\n\nIf the actor does not exist at the specified tipset, this function returns nil.\n\nExperimental: This API is experimental and may change without notice.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetSelector",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "tag": "finalized"
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "height": {
                                "additionalProperties": false,
                                "properties": {
                                    "anchor": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "key": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "tag": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "at": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "previous": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "key": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "tag": {
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.Actor",
                "description": "*types.Actor",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Code": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Head": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Nonce": 42,
                            "Balance": "0",
                            "DelegatedAddress": "f01234"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Balance": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Code": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "DelegatedAddress": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Head": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Nonce": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L660"
            }
        },
        {
            "name": "Filecoin.StateGetID",
            "description": "```go\nfunc (s *FullNodeStruct) StateGetID(p0 context.Context, p1 address.Address, p2 types.TipSetSelector) (*address.Address, error) {\n\tif s.Internal.StateGetID == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateGetID(p0, p1, p2)\n}\n```",
            "summary": "StateGetID retrieves the ID address for the specified address at the selected tipset.\n\nEvery actor on the Filecoin network has a unique ID address (format: f0123).\nThis function resolves any address type (ID, robust, or delegated) to its canonical\nID address representation at the specified tipset.\n\nThe function is particularly useful for:\n  - Normalizing different address formats to a consistent representation\n  - Following address changes across state transitions\n  - Verifying that an address corresponds to an existing actor\n\nThe TipSetSelector parameter provides flexible options for selecting the tipset.\nSee StateGetActor documentation for details on selection options.\n\nIf the address cannot be resolved at the specified tipset, this function returns nil.\n\nExperimental: This API is experimental and may change without notice.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetSelector",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "tag": "finalized"
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "height": {
                                "additionalProperties": false,
                                "properties": {
                                    "anchor": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "key": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "tag": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "at": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "previous": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "key": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "tag": {
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*address.Address",
                "description": "*address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L671"
            }
        },
        {
            "name": "Filecoin.Web3ClientVersion",
            "description": "```go\nfunc (s *FullNodeStruct) Web3ClientVersion(p0 context.Context) (string, error) {\n\tif s.Internal.Web3ClientVersion == nil {\n\t\treturn \"\", ErrNotSupported\n\t}\n\treturn s.Internal.Web3ClientVersion(p0)\n}\n```",
            "summary": "Web3ClientVersion returns the client version.\nMaps to JSON-RPC method: \"web3_clientVersion\".\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "string",
                "description": "string",
                "summary": "",
                "schema": {
                    "examples": [
                        "string value"
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/v2api/proxy_gen.go#L682"
            }
        }
    ]
}
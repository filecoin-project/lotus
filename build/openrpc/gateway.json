{
    "openrpc": "1.2.6",
    "info": {
        "title": "Lotus RPC API",
        "version": "1.27.2-dev"
    },
    "methods": [
        {
            "name": "Filecoin.ChainGetBlock",
            "description": "```go\nfunc (s *GatewayStruct) ChainGetBlock(p0 context.Context, p1 cid.Cid) (*types.BlockHeader, error) {\n\tif s.Internal.ChainGetBlock == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetBlock(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.BlockHeader",
                "description": "*types.BlockHeader",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Miner": "f01234",
                            "Ticket": {
                                "VRFProof": "Ynl0ZSBhcnJheQ=="
                            },
                            "ElectionProof": {
                                "WinCount": 9,
                                "VRFProof": "Ynl0ZSBhcnJheQ=="
                            },
                            "BeaconEntries": [
                                {
                                    "Round": 42,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                }
                            ],
                            "WinPoStProof": [
                                {
                                    "PoStProof": 8,
                                    "ProofBytes": "Ynl0ZSBhcnJheQ=="
                                }
                            ],
                            "Parents": [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                }
                            ],
                            "ParentWeight": "0",
                            "Height": 10101,
                            "ParentStateRoot": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "ParentMessageReceipts": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Messages": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "BLSAggregate": {
                                "Type": 2,
                                "Data": "Ynl0ZSBhcnJheQ=="
                            },
                            "Timestamp": 42,
                            "BlockSig": {
                                "Type": 2,
                                "Data": "Ynl0ZSBhcnJheQ=="
                            },
                            "ForkSignaling": 42,
                            "ParentBaseFee": "0"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "BLSAggregate": {
                            "additionalProperties": false,
                            "properties": {
                                "Data": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "Type": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "BeaconEntries": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Round": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "BlockSig": {
                            "additionalProperties": false,
                            "properties": {
                                "Data": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "Type": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "ElectionProof": {
                            "additionalProperties": false,
                            "properties": {
                                "VRFProof": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "WinCount": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "ForkSignaling": {
                            "title": "number",
                            "type": "number"
                        },
                        "Height": {
                            "title": "number",
                            "type": "number"
                        },
                        "Messages": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Miner": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "ParentBaseFee": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "ParentMessageReceipts": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "ParentStateRoot": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "ParentWeight": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Parents": {
                            "items": {
                                "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                                "title": "Content Identifier",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "Ticket": {
                            "additionalProperties": false,
                            "properties": {
                                "VRFProof": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "Timestamp": {
                            "title": "number",
                            "type": "number"
                        },
                        "WinPoStProof": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "PoStProof": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "ProofBytes": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L3771"
            }
        },
        {
            "name": "Filecoin.ChainGetBlockMessages",
            "description": "```go\nfunc (s *GatewayStruct) ChainGetBlockMessages(p0 context.Context, p1 cid.Cid) (*BlockMessages, error) {\n\tif s.Internal.ChainGetBlockMessages == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetBlockMessages(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*BlockMessages",
                "description": "*BlockMessages",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "BlsMessages": [
                                {
                                    "Version": 42,
                                    "To": "f01234",
                                    "From": "f01234",
                                    "Nonce": 42,
                                    "Value": "0",
                                    "GasLimit": 9,
                                    "GasFeeCap": "0",
                                    "GasPremium": "0",
                                    "Method": 1,
                                    "Params": "Ynl0ZSBhcnJheQ==",
                                    "CID": {
                                        "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                    }
                                }
                            ],
                            "SecpkMessages": [
                                {
                                    "Message": {
                                        "Version": 42,
                                        "To": "f01234",
                                        "From": "f01234",
                                        "Nonce": 42,
                                        "Value": "0",
                                        "GasLimit": 9,
                                        "GasFeeCap": "0",
                                        "GasPremium": "0",
                                        "Method": 1,
                                        "Params": "Ynl0ZSBhcnJheQ==",
                                        "CID": {
                                            "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                        }
                                    },
                                    "Signature": {
                                        "Type": 2,
                                        "Data": "Ynl0ZSBhcnJheQ=="
                                    },
                                    "CID": {
                                        "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                    }
                                }
                            ],
                            "Cids": [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                }
                            ]
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "BlsMessages": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "From": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasFeeCap": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasLimit": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "GasPremium": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Method": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Nonce": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Params": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "To": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Value": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Version": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "Cids": {
                            "items": {
                                "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                                "title": "Content Identifier",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "SecpkMessages": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "Message": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "From": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasFeeCap": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasLimit": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "GasPremium": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Method": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "Nonce": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "Params": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "To": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Value": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Version": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Signature": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Data": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "Type": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L3782"
            }
        },
        {
            "name": "Filecoin.ChainGetEvents",
            "description": "```go\nfunc (s *GatewayStruct) ChainGetEvents(p0 context.Context, p1 cid.Cid) ([]types.Event, error) {\n\tif s.Internal.ChainGetEvents == nil {\n\t\treturn *new([]types.Event), ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetEvents(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]types.Event",
                "description": "[]types.Event",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "Emitter": 1000,
                                "Entries": [
                                    {
                                        "Flags": 7,
                                        "Key": "string value",
                                        "Codec": 42,
                                        "Value": "Ynl0ZSBhcnJheQ=="
                                    }
                                ]
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Emitter": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Entries": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Codec": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "Flags": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "Key": {
                                                "type": "string"
                                            },
                                            "Value": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L3793"
            }
        },
        {
            "name": "Filecoin.ChainGetGenesis",
            "description": "```go\nfunc (s *GatewayStruct) ChainGetGenesis(p0 context.Context) (*types.TipSet, error) {\n\tif s.Internal.ChainGetGenesis == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetGenesis(p0)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "*types.TipSet",
                "description": "*types.TipSet",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Cids": null,
                            "Blocks": null,
                            "Height": 0
                        }
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L3804"
            }
        },
        {
            "name": "Filecoin.ChainGetMessage",
            "description": "```go\nfunc (s *GatewayStruct) ChainGetMessage(p0 context.Context, p1 cid.Cid) (*types.Message, error) {\n\tif s.Internal.ChainGetMessage == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetMessage(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.Message",
                "description": "*types.Message",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Version": 42,
                            "To": "f01234",
                            "From": "f01234",
                            "Nonce": 42,
                            "Value": "0",
                            "GasLimit": 9,
                            "GasFeeCap": "0",
                            "GasPremium": "0",
                            "Method": 1,
                            "Params": "Ynl0ZSBhcnJheQ==",
                            "CID": {
                                "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "From": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "GasFeeCap": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "GasLimit": {
                            "title": "number",
                            "type": "number"
                        },
                        "GasPremium": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Method": {
                            "title": "number",
                            "type": "number"
                        },
                        "Nonce": {
                            "title": "number",
                            "type": "number"
                        },
                        "Params": {
                            "media": {
                                "binaryEncoding": "base64"
                            },
                            "type": "string"
                        },
                        "To": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Value": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Version": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L3815"
            }
        },
        {
            "name": "Filecoin.ChainGetParentMessages",
            "description": "```go\nfunc (s *GatewayStruct) ChainGetParentMessages(p0 context.Context, p1 cid.Cid) ([]Message, error) {\n\tif s.Internal.ChainGetParentMessages == nil {\n\t\treturn *new([]Message), ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetParentMessages(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]Message",
                "description": "[]Message",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "Cid": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "Message": {
                                    "Version": 42,
                                    "To": "f01234",
                                    "From": "f01234",
                                    "Nonce": 42,
                                    "Value": "0",
                                    "GasLimit": 9,
                                    "GasFeeCap": "0",
                                    "GasPremium": "0",
                                    "Method": 1,
                                    "Params": "Ynl0ZSBhcnJheQ==",
                                    "CID": {
                                        "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                    }
                                }
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Cid": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "Message": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Cid": {
                                            "title": "Content Identifier",
                                            "type": "string"
                                        },
                                        "Message": {}
                                    },
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L3826"
            }
        },
        {
            "name": "Filecoin.ChainGetParentReceipts",
            "description": "```go\nfunc (s *GatewayStruct) ChainGetParentReceipts(p0 context.Context, p1 cid.Cid) ([]*types.MessageReceipt, error) {\n\tif s.Internal.ChainGetParentReceipts == nil {\n\t\treturn *new([]*types.MessageReceipt), ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetParentReceipts(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*types.MessageReceipt",
                "description": "[]*types.MessageReceipt",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "ExitCode": 0,
                                "Return": "Ynl0ZSBhcnJheQ==",
                                "GasUsed": 9,
                                "EventsRoot": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                }
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "EventsRoot": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "ExitCode": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasUsed": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Return": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L3837"
            }
        },
        {
            "name": "Filecoin.ChainGetPath",
            "description": "```go\nfunc (s *GatewayStruct) ChainGetPath(p0 context.Context, p1 types.TipSetKey, p2 types.TipSetKey) ([]*HeadChange, error) {\n\tif s.Internal.ChainGetPath == nil {\n\t\treturn *new([]*HeadChange), ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetPath(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*HeadChange",
                "description": "[]*HeadChange",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "Type": "string value",
                                "Val": {
                                    "Cids": null,
                                    "Blocks": null,
                                    "Height": 0
                                }
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Type": {
                                    "type": "string"
                                },
                                "Val": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L3848"
            }
        },
        {
            "name": "Filecoin.ChainGetTipSet",
            "description": "```go\nfunc (s *GatewayStruct) ChainGetTipSet(p0 context.Context, p1 types.TipSetKey) (*types.TipSet, error) {\n\tif s.Internal.ChainGetTipSet == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetTipSet(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.TipSet",
                "description": "*types.TipSet",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Cids": null,
                            "Blocks": null,
                            "Height": 0
                        }
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L3859"
            }
        },
        {
            "name": "Filecoin.ChainGetTipSetAfterHeight",
            "description": "```go\nfunc (s *GatewayStruct) ChainGetTipSetAfterHeight(p0 context.Context, p1 abi.ChainEpoch, p2 types.TipSetKey) (*types.TipSet, error) {\n\tif s.Internal.ChainGetTipSetAfterHeight == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetTipSetAfterHeight(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.TipSet",
                "description": "*types.TipSet",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Cids": null,
                            "Blocks": null,
                            "Height": 0
                        }
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L3870"
            }
        },
        {
            "name": "Filecoin.ChainGetTipSetByHeight",
            "description": "```go\nfunc (s *GatewayStruct) ChainGetTipSetByHeight(p0 context.Context, p1 abi.ChainEpoch, p2 types.TipSetKey) (*types.TipSet, error) {\n\tif s.Internal.ChainGetTipSetByHeight == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ChainGetTipSetByHeight(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.TipSet",
                "description": "*types.TipSet",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Cids": null,
                            "Blocks": null,
                            "Height": 0
                        }
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L3881"
            }
        },
        {
            "name": "Filecoin.ChainHasObj",
            "description": "```go\nfunc (s *GatewayStruct) ChainHasObj(p0 context.Context, p1 cid.Cid) (bool, error) {\n\tif s.Internal.ChainHasObj == nil {\n\t\treturn false, ErrNotSupported\n\t}\n\treturn s.Internal.ChainHasObj(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L3892"
            }
        },
        {
            "name": "Filecoin.ChainHead",
            "description": "```go\nfunc (s *GatewayStruct) ChainHead(p0 context.Context) (*types.TipSet, error) {\n\tif s.Internal.ChainHead == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.ChainHead(p0)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "*types.TipSet",
                "description": "*types.TipSet",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Cids": null,
                            "Blocks": null,
                            "Height": 0
                        }
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L3903"
            }
        },
        {
            "name": "Filecoin.ChainPutObj",
            "description": "```go\nfunc (s *GatewayStruct) ChainPutObj(p0 context.Context, p1 blocks.Block) error {\n\tif s.Internal.ChainPutObj == nil {\n\t\treturn ErrNotSupported\n\t}\n\treturn s.Internal.ChainPutObj(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "blocks.Block",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {}
                        ],
                        "additionalProperties": true
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L3925"
            }
        },
        {
            "name": "Filecoin.ChainReadObj",
            "description": "```go\nfunc (s *GatewayStruct) ChainReadObj(p0 context.Context, p1 cid.Cid) ([]byte, error) {\n\tif s.Internal.ChainReadObj == nil {\n\t\treturn *new([]byte), ErrNotSupported\n\t}\n\treturn s.Internal.ChainReadObj(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]byte",
                "description": "[]byte",
                "summary": "",
                "schema": {
                    "examples": [
                        "Ynl0ZSBhcnJheQ=="
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L3936"
            }
        },
        {
            "name": "Filecoin.Discover",
            "description": "```go\nfunc (s *GatewayStruct) Discover(p0 context.Context) (apitypes.OpenRPCDocument, error) {\n\tif s.Internal.Discover == nil {\n\t\treturn *new(apitypes.OpenRPCDocument), ErrNotSupported\n\t}\n\treturn s.Internal.Discover(p0)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "apitypes.OpenRPCDocument",
                "description": "apitypes.OpenRPCDocument",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "info": {
                                "title": "Lotus RPC API",
                                "version": "1.2.1/generated=2020-11-22T08:22:42-06:00"
                            },
                            "methods": [],
                            "openrpc": "1.2.6"
                        }
                    ],
                    "patternProperties": {
                        ".*": {
                            "additionalProperties": true,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L3947"
            }
        },
        {
            "name": "Filecoin.EthAccounts",
            "description": "```go\nfunc (s *GatewayStruct) EthAccounts(p0 context.Context) ([]ethtypes.EthAddress, error) {\n\tif s.Internal.EthAccounts == nil {\n\t\treturn *new([]ethtypes.EthAddress), ErrNotSupported\n\t}\n\treturn s.Internal.EthAccounts(p0)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "[]ethtypes.EthAddress",
                "description": "[]ethtypes.EthAddress",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031"
                        ]
                    ],
                    "items": [
                        {
                            "items": [
                                {
                                    "title": "number",
                                    "description": "Number is a number",
                                    "type": [
                                        "number"
                                    ]
                                }
                            ],
                            "maxItems": 20,
                            "minItems": 20,
                            "type": [
                                "array"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L3958"
            }
        },
        {
            "name": "Filecoin.EthAddressToFilecoinAddress",
            "description": "```go\nfunc (s *GatewayStruct) EthAddressToFilecoinAddress(p0 context.Context, p1 ethtypes.EthAddress) (address.Address, error) {\n\tif s.Internal.EthAddressToFilecoinAddress == nil {\n\t\treturn *new(address.Address), ErrNotSupported\n\t}\n\treturn s.Internal.EthAddressToFilecoinAddress(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 20,
                        "minItems": 20,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "address.Address",
                "description": "address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L3969"
            }
        },
        {
            "name": "Filecoin.EthBlockNumber",
            "description": "```go\nfunc (s *GatewayStruct) EthBlockNumber(p0 context.Context) (ethtypes.EthUint64, error) {\n\tif s.Internal.EthBlockNumber == nil {\n\t\treturn *new(ethtypes.EthUint64), ErrNotSupported\n\t}\n\treturn s.Internal.EthBlockNumber(p0)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "ethtypes.EthUint64",
                "description": "ethtypes.EthUint64",
                "summary": "",
                "schema": {
                    "title": "number",
                    "description": "Number is a number",
                    "examples": [
                        "0x5"
                    ],
                    "type": [
                        "number"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L3980"
            }
        },
        {
            "name": "Filecoin.EthCall",
            "description": "```go\nfunc (s *GatewayStruct) EthCall(p0 context.Context, p1 ethtypes.EthCall, p2 ethtypes.EthBlockNumberOrHash) (ethtypes.EthBytes, error) {\n\tif s.Internal.EthCall == nil {\n\t\treturn *new(ethtypes.EthBytes), ErrNotSupported\n\t}\n\treturn s.Internal.EthCall(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthCall",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "from": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                                "to": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                                "gas": "0x5",
                                "gasPrice": "0x0",
                                "value": "0x0",
                                "data": "0x07"
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "data": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "type": "array"
                            },
                            "from": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 20,
                                "minItems": 20,
                                "type": "array"
                            },
                            "gas": {
                                "title": "number",
                                "type": "number"
                            },
                            "gasPrice": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "to": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 20,
                                "minItems": 20,
                                "type": "array"
                            },
                            "value": {
                                "additionalProperties": false,
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "ethtypes.EthBlockNumberOrHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "blockHash": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "blockNumber": {
                                "title": "number",
                                "type": "number"
                            },
                            "requireCanonical": {
                                "type": "boolean"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthBytes",
                "description": "ethtypes.EthBytes",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x07"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L3991"
            }
        },
        {
            "name": "Filecoin.EthChainId",
            "description": "```go\nfunc (s *GatewayStruct) EthChainId(p0 context.Context) (ethtypes.EthUint64, error) {\n\tif s.Internal.EthChainId == nil {\n\t\treturn *new(ethtypes.EthUint64), ErrNotSupported\n\t}\n\treturn s.Internal.EthChainId(p0)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "ethtypes.EthUint64",
                "description": "ethtypes.EthUint64",
                "summary": "",
                "schema": {
                    "title": "number",
                    "description": "Number is a number",
                    "examples": [
                        "0x5"
                    ],
                    "type": [
                        "number"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4002"
            }
        },
        {
            "name": "Filecoin.EthEstimateGas",
            "description": "```go\nfunc (s *GatewayStruct) EthEstimateGas(p0 context.Context, p1 jsonrpc.RawParams) (ethtypes.EthUint64, error) {\n\tif s.Internal.EthEstimateGas == nil {\n\t\treturn *new(ethtypes.EthUint64), ErrNotSupported\n\t}\n\treturn s.Internal.EthEstimateGas(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "jsonrpc.RawParams",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Bw=="
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthUint64",
                "description": "ethtypes.EthUint64",
                "summary": "",
                "schema": {
                    "title": "number",
                    "description": "Number is a number",
                    "examples": [
                        "0x5"
                    ],
                    "type": [
                        "number"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4013"
            }
        },
        {
            "name": "Filecoin.EthFeeHistory",
            "description": "```go\nfunc (s *GatewayStruct) EthFeeHistory(p0 context.Context, p1 jsonrpc.RawParams) (ethtypes.EthFeeHistory, error) {\n\tif s.Internal.EthFeeHistory == nil {\n\t\treturn *new(ethtypes.EthFeeHistory), ErrNotSupported\n\t}\n\treturn s.Internal.EthFeeHistory(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "jsonrpc.RawParams",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Bw=="
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthFeeHistory",
                "description": "ethtypes.EthFeeHistory",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "oldestBlock": "0x5",
                            "baseFeePerGas": [
                                "0x0"
                            ],
                            "gasUsedRatio": [
                                12.3
                            ],
                            "reward": []
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "baseFeePerGas": {
                            "items": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "gasUsedRatio": {
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "oldestBlock": {
                            "title": "number",
                            "type": "number"
                        },
                        "reward": {
                            "items": {
                                "items": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4024"
            }
        },
        {
            "name": "Filecoin.EthGasPrice",
            "description": "```go\nfunc (s *GatewayStruct) EthGasPrice(p0 context.Context) (ethtypes.EthBigInt, error) {\n\tif s.Internal.EthGasPrice == nil {\n\t\treturn *new(ethtypes.EthBigInt), ErrNotSupported\n\t}\n\treturn s.Internal.EthGasPrice(p0)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "ethtypes.EthBigInt",
                "description": "ethtypes.EthBigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4035"
            }
        },
        {
            "name": "Filecoin.EthGetBalance",
            "description": "```go\nfunc (s *GatewayStruct) EthGetBalance(p0 context.Context, p1 ethtypes.EthAddress, p2 ethtypes.EthBlockNumberOrHash) (ethtypes.EthBigInt, error) {\n\tif s.Internal.EthGetBalance == nil {\n\t\treturn *new(ethtypes.EthBigInt), ErrNotSupported\n\t}\n\treturn s.Internal.EthGetBalance(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 20,
                        "minItems": 20,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "ethtypes.EthBlockNumberOrHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "blockHash": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "blockNumber": {
                                "title": "number",
                                "type": "number"
                            },
                            "requireCanonical": {
                                "type": "boolean"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthBigInt",
                "description": "ethtypes.EthBigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4046"
            }
        },
        {
            "name": "Filecoin.EthGetBlockByHash",
            "description": "```go\nfunc (s *GatewayStruct) EthGetBlockByHash(p0 context.Context, p1 ethtypes.EthHash, p2 bool) (ethtypes.EthBlock, error) {\n\tif s.Internal.EthGetBlockByHash == nil {\n\t\treturn *new(ethtypes.EthBlock), ErrNotSupported\n\t}\n\treturn s.Internal.EthGetBlockByHash(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthBlock",
                "description": "ethtypes.EthBlock",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "hash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "parentHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "sha3Uncles": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "miner": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "stateRoot": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "transactionsRoot": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "receiptsRoot": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "logsBloom": "0x07",
                            "difficulty": "0x5",
                            "totalDifficulty": "0x5",
                            "number": "0x5",
                            "gasLimit": "0x5",
                            "gasUsed": "0x5",
                            "timestamp": "0x5",
                            "extraData": "0x07",
                            "mixHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "nonce": "0x0707070707070707",
                            "baseFeePerGas": "0x0",
                            "size": "0x5",
                            "transactions": [
                                {}
                            ],
                            "uncles": [
                                "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                            ]
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "baseFeePerGas": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "difficulty": {
                            "title": "number",
                            "type": "number"
                        },
                        "extraData": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "gasLimit": {
                            "title": "number",
                            "type": "number"
                        },
                        "gasUsed": {
                            "title": "number",
                            "type": "number"
                        },
                        "hash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "logsBloom": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "miner": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "mixHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "nonce": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 8,
                            "minItems": 8,
                            "type": "array"
                        },
                        "number": {
                            "title": "number",
                            "type": "number"
                        },
                        "parentHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "receiptsRoot": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "sha3Uncles": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "size": {
                            "title": "number",
                            "type": "number"
                        },
                        "stateRoot": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "timestamp": {
                            "title": "number",
                            "type": "number"
                        },
                        "totalDifficulty": {
                            "title": "number",
                            "type": "number"
                        },
                        "transactions": {
                            "items": {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "transactionsRoot": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "uncles": {
                            "items": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4057"
            }
        },
        {
            "name": "Filecoin.EthGetBlockByNumber",
            "description": "```go\nfunc (s *GatewayStruct) EthGetBlockByNumber(p0 context.Context, p1 string, p2 bool) (ethtypes.EthBlock, error) {\n\tif s.Internal.EthGetBlockByNumber == nil {\n\t\treturn *new(ethtypes.EthBlock), ErrNotSupported\n\t}\n\treturn s.Internal.EthGetBlockByNumber(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthBlock",
                "description": "ethtypes.EthBlock",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "hash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "parentHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "sha3Uncles": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "miner": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "stateRoot": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "transactionsRoot": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "receiptsRoot": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "logsBloom": "0x07",
                            "difficulty": "0x5",
                            "totalDifficulty": "0x5",
                            "number": "0x5",
                            "gasLimit": "0x5",
                            "gasUsed": "0x5",
                            "timestamp": "0x5",
                            "extraData": "0x07",
                            "mixHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "nonce": "0x0707070707070707",
                            "baseFeePerGas": "0x0",
                            "size": "0x5",
                            "transactions": [
                                {}
                            ],
                            "uncles": [
                                "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                            ]
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "baseFeePerGas": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "difficulty": {
                            "title": "number",
                            "type": "number"
                        },
                        "extraData": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "gasLimit": {
                            "title": "number",
                            "type": "number"
                        },
                        "gasUsed": {
                            "title": "number",
                            "type": "number"
                        },
                        "hash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "logsBloom": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "miner": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "mixHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "nonce": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 8,
                            "minItems": 8,
                            "type": "array"
                        },
                        "number": {
                            "title": "number",
                            "type": "number"
                        },
                        "parentHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "receiptsRoot": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "sha3Uncles": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "size": {
                            "title": "number",
                            "type": "number"
                        },
                        "stateRoot": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "timestamp": {
                            "title": "number",
                            "type": "number"
                        },
                        "totalDifficulty": {
                            "title": "number",
                            "type": "number"
                        },
                        "transactions": {
                            "items": {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "transactionsRoot": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "uncles": {
                            "items": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4068"
            }
        },
        {
            "name": "Filecoin.EthGetBlockTransactionCountByHash",
            "description": "```go\nfunc (s *GatewayStruct) EthGetBlockTransactionCountByHash(p0 context.Context, p1 ethtypes.EthHash) (ethtypes.EthUint64, error) {\n\tif s.Internal.EthGetBlockTransactionCountByHash == nil {\n\t\treturn *new(ethtypes.EthUint64), ErrNotSupported\n\t}\n\treturn s.Internal.EthGetBlockTransactionCountByHash(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthUint64",
                "description": "ethtypes.EthUint64",
                "summary": "",
                "schema": {
                    "title": "number",
                    "description": "Number is a number",
                    "examples": [
                        "0x5"
                    ],
                    "type": [
                        "number"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4079"
            }
        },
        {
            "name": "Filecoin.EthGetBlockTransactionCountByNumber",
            "description": "```go\nfunc (s *GatewayStruct) EthGetBlockTransactionCountByNumber(p0 context.Context, p1 ethtypes.EthUint64) (ethtypes.EthUint64, error) {\n\tif s.Internal.EthGetBlockTransactionCountByNumber == nil {\n\t\treturn *new(ethtypes.EthUint64), ErrNotSupported\n\t}\n\treturn s.Internal.EthGetBlockTransactionCountByNumber(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthUint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            "0x5"
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthUint64",
                "description": "ethtypes.EthUint64",
                "summary": "",
                "schema": {
                    "title": "number",
                    "description": "Number is a number",
                    "examples": [
                        "0x5"
                    ],
                    "type": [
                        "number"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4090"
            }
        },
        {
            "name": "Filecoin.EthGetCode",
            "description": "```go\nfunc (s *GatewayStruct) EthGetCode(p0 context.Context, p1 ethtypes.EthAddress, p2 ethtypes.EthBlockNumberOrHash) (ethtypes.EthBytes, error) {\n\tif s.Internal.EthGetCode == nil {\n\t\treturn *new(ethtypes.EthBytes), ErrNotSupported\n\t}\n\treturn s.Internal.EthGetCode(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 20,
                        "minItems": 20,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "ethtypes.EthBlockNumberOrHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "blockHash": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "blockNumber": {
                                "title": "number",
                                "type": "number"
                            },
                            "requireCanonical": {
                                "type": "boolean"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthBytes",
                "description": "ethtypes.EthBytes",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x07"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4101"
            }
        },
        {
            "name": "Filecoin.EthGetFilterChanges",
            "description": "```go\nfunc (s *GatewayStruct) EthGetFilterChanges(p0 context.Context, p1 ethtypes.EthFilterID) (*ethtypes.EthFilterResult, error) {\n\tif s.Internal.EthGetFilterChanges == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.EthGetFilterChanges(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthFilterID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ethtypes.EthFilterResult",
                "description": "*ethtypes.EthFilterResult",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {}
                        ]
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Results": {
                            "items": {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4112"
            }
        },
        {
            "name": "Filecoin.EthGetFilterLogs",
            "description": "```go\nfunc (s *GatewayStruct) EthGetFilterLogs(p0 context.Context, p1 ethtypes.EthFilterID) (*ethtypes.EthFilterResult, error) {\n\tif s.Internal.EthGetFilterLogs == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.EthGetFilterLogs(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthFilterID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ethtypes.EthFilterResult",
                "description": "*ethtypes.EthFilterResult",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {}
                        ]
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Results": {
                            "items": {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4123"
            }
        },
        {
            "name": "Filecoin.EthGetLogs",
            "description": "```go\nfunc (s *GatewayStruct) EthGetLogs(p0 context.Context, p1 *ethtypes.EthFilterSpec) (*ethtypes.EthFilterResult, error) {\n\tif s.Internal.EthGetLogs == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.EthGetLogs(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*ethtypes.EthFilterSpec",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "fromBlock": "2301220",
                                "address": [
                                    "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031"
                                ],
                                "topics": null
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "address": {
                                "items": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 20,
                                    "minItems": 20,
                                    "type": "array"
                                },
                                "type": "array"
                            },
                            "blockHash": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "fromBlock": {
                                "type": "string"
                            },
                            "toBlock": {
                                "type": "string"
                            },
                            "topics": {
                                "items": {
                                    "items": {
                                        "items": {
                                            "description": "Number is a number",
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "maxItems": 32,
                                        "minItems": 32,
                                        "type": "array"
                                    },
                                    "type": "array"
                                },
                                "type": "array"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ethtypes.EthFilterResult",
                "description": "*ethtypes.EthFilterResult",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {}
                        ]
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Results": {
                            "items": {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4134"
            }
        },
        {
            "name": "Filecoin.EthGetMessageCidByTransactionHash",
            "description": "```go\nfunc (s *GatewayStruct) EthGetMessageCidByTransactionHash(p0 context.Context, p1 *ethtypes.EthHash) (*cid.Cid, error) {\n\tif s.Internal.EthGetMessageCidByTransactionHash == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.EthGetMessageCidByTransactionHash(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*ethtypes.EthHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*cid.Cid",
                "description": "*cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4145"
            }
        },
        {
            "name": "Filecoin.EthGetStorageAt",
            "description": "```go\nfunc (s *GatewayStruct) EthGetStorageAt(p0 context.Context, p1 ethtypes.EthAddress, p2 ethtypes.EthBytes, p3 ethtypes.EthBlockNumberOrHash) (ethtypes.EthBytes, error) {\n\tif s.Internal.EthGetStorageAt == nil {\n\t\treturn *new(ethtypes.EthBytes), ErrNotSupported\n\t}\n\treturn s.Internal.EthGetStorageAt(p0, p1, p2, p3)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 20,
                        "minItems": 20,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "ethtypes.EthBytes",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x07"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "ethtypes.EthBlockNumberOrHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "blockHash": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "blockNumber": {
                                "title": "number",
                                "type": "number"
                            },
                            "requireCanonical": {
                                "type": "boolean"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthBytes",
                "description": "ethtypes.EthBytes",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x07"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4156"
            }
        },
        {
            "name": "Filecoin.EthGetTransactionByHash",
            "description": "```go\nfunc (s *GatewayStruct) EthGetTransactionByHash(p0 context.Context, p1 *ethtypes.EthHash) (*ethtypes.EthTx, error) {\n\tif s.Internal.EthGetTransactionByHash == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.EthGetTransactionByHash(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*ethtypes.EthHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ethtypes.EthTx",
                "description": "*ethtypes.EthTx",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "chainId": "0x5",
                            "nonce": "0x5",
                            "hash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "blockNumber": "0x5",
                            "transactionIndex": "0x5",
                            "from": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "to": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "value": "0x0",
                            "type": "0x5",
                            "input": "0x07",
                            "gas": "0x5",
                            "maxFeePerGas": "0x0",
                            "maxPriorityFeePerGas": "0x0",
                            "gasPrice": "0x0",
                            "accessList": [
                                "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                            ],
                            "v": "0x0",
                            "r": "0x0",
                            "s": "0x0"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "accessList": {
                            "items": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "type": "array"
                        },
                        "blockHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "blockNumber": {
                            "title": "number",
                            "type": "number"
                        },
                        "chainId": {
                            "title": "number",
                            "type": "number"
                        },
                        "from": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "gas": {
                            "title": "number",
                            "type": "number"
                        },
                        "gasPrice": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "hash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "input": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "maxFeePerGas": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "maxPriorityFeePerGas": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "nonce": {
                            "title": "number",
                            "type": "number"
                        },
                        "r": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "s": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "to": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "transactionIndex": {
                            "title": "number",
                            "type": "number"
                        },
                        "type": {
                            "title": "number",
                            "type": "number"
                        },
                        "v": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "value": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4167"
            }
        },
        {
            "name": "Filecoin.EthGetTransactionByHashLimited",
            "description": "```go\nfunc (s *GatewayStruct) EthGetTransactionByHashLimited(p0 context.Context, p1 *ethtypes.EthHash, p2 abi.ChainEpoch) (*ethtypes.EthTx, error) {\n\tif s.Internal.EthGetTransactionByHashLimited == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.EthGetTransactionByHashLimited(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*ethtypes.EthHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ethtypes.EthTx",
                "description": "*ethtypes.EthTx",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "chainId": "0x5",
                            "nonce": "0x5",
                            "hash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "blockNumber": "0x5",
                            "transactionIndex": "0x5",
                            "from": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "to": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "value": "0x0",
                            "type": "0x5",
                            "input": "0x07",
                            "gas": "0x5",
                            "maxFeePerGas": "0x0",
                            "maxPriorityFeePerGas": "0x0",
                            "gasPrice": "0x0",
                            "accessList": [
                                "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                            ],
                            "v": "0x0",
                            "r": "0x0",
                            "s": "0x0"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "accessList": {
                            "items": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "type": "array"
                        },
                        "blockHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "blockNumber": {
                            "title": "number",
                            "type": "number"
                        },
                        "chainId": {
                            "title": "number",
                            "type": "number"
                        },
                        "from": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "gas": {
                            "title": "number",
                            "type": "number"
                        },
                        "gasPrice": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "hash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "input": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "maxFeePerGas": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "maxPriorityFeePerGas": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "nonce": {
                            "title": "number",
                            "type": "number"
                        },
                        "r": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "s": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "to": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "transactionIndex": {
                            "title": "number",
                            "type": "number"
                        },
                        "type": {
                            "title": "number",
                            "type": "number"
                        },
                        "v": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "value": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4178"
            }
        },
        {
            "name": "Filecoin.EthGetTransactionCount",
            "description": "```go\nfunc (s *GatewayStruct) EthGetTransactionCount(p0 context.Context, p1 ethtypes.EthAddress, p2 ethtypes.EthBlockNumberOrHash) (ethtypes.EthUint64, error) {\n\tif s.Internal.EthGetTransactionCount == nil {\n\t\treturn *new(ethtypes.EthUint64), ErrNotSupported\n\t}\n\treturn s.Internal.EthGetTransactionCount(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 20,
                        "minItems": 20,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "ethtypes.EthBlockNumberOrHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "blockHash": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "blockNumber": {
                                "title": "number",
                                "type": "number"
                            },
                            "requireCanonical": {
                                "type": "boolean"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthUint64",
                "description": "ethtypes.EthUint64",
                "summary": "",
                "schema": {
                    "title": "number",
                    "description": "Number is a number",
                    "examples": [
                        "0x5"
                    ],
                    "type": [
                        "number"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4189"
            }
        },
        {
            "name": "Filecoin.EthGetTransactionHashByCid",
            "description": "```go\nfunc (s *GatewayStruct) EthGetTransactionHashByCid(p0 context.Context, p1 cid.Cid) (*ethtypes.EthHash, error) {\n\tif s.Internal.EthGetTransactionHashByCid == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.EthGetTransactionHashByCid(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ethtypes.EthHash",
                "description": "*ethtypes.EthHash",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "maxItems": 32,
                    "minItems": 32,
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4200"
            }
        },
        {
            "name": "Filecoin.EthGetTransactionReceipt",
            "description": "```go\nfunc (s *GatewayStruct) EthGetTransactionReceipt(p0 context.Context, p1 ethtypes.EthHash) (*EthTxReceipt, error) {\n\tif s.Internal.EthGetTransactionReceipt == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.EthGetTransactionReceipt(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*EthTxReceipt",
                "description": "*EthTxReceipt",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "transactionHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "transactionIndex": "0x5",
                            "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "blockNumber": "0x5",
                            "from": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "to": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "root": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "status": "0x5",
                            "contractAddress": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "cumulativeGasUsed": "0x5",
                            "gasUsed": "0x5",
                            "effectiveGasPrice": "0x0",
                            "logsBloom": "0x07",
                            "logs": [
                                {
                                    "address": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                                    "data": "0x07",
                                    "topics": [
                                        "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                                    ],
                                    "removed": true,
                                    "logIndex": "0x5",
                                    "transactionIndex": "0x5",
                                    "transactionHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                    "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                    "blockNumber": "0x5"
                                }
                            ],
                            "type": "0x5"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "blockHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "blockNumber": {
                            "title": "number",
                            "type": "number"
                        },
                        "contractAddress": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "cumulativeGasUsed": {
                            "title": "number",
                            "type": "number"
                        },
                        "effectiveGasPrice": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "from": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "gasUsed": {
                            "title": "number",
                            "type": "number"
                        },
                        "logs": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "address": {
                                        "items": {
                                            "description": "Number is a number",
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "maxItems": 20,
                                        "minItems": 20,
                                        "type": "array"
                                    },
                                    "blockHash": {
                                        "items": {
                                            "description": "Number is a number",
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "maxItems": 32,
                                        "minItems": 32,
                                        "type": "array"
                                    },
                                    "blockNumber": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "data": {
                                        "items": {
                                            "description": "Number is a number",
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "type": "array"
                                    },
                                    "logIndex": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "removed": {
                                        "type": "boolean"
                                    },
                                    "topics": {
                                        "items": {
                                            "items": {
                                                "description": "Number is a number",
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "maxItems": 32,
                                            "minItems": 32,
                                            "type": "array"
                                        },
                                        "type": "array"
                                    },
                                    "transactionHash": {
                                        "items": {
                                            "description": "Number is a number",
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "maxItems": 32,
                                        "minItems": 32,
                                        "type": "array"
                                    },
                                    "transactionIndex": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "logsBloom": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "root": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "status": {
                            "title": "number",
                            "type": "number"
                        },
                        "to": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "transactionHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "transactionIndex": {
                            "title": "number",
                            "type": "number"
                        },
                        "type": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4211"
            }
        },
        {
            "name": "Filecoin.EthGetTransactionReceiptLimited",
            "description": "```go\nfunc (s *GatewayStruct) EthGetTransactionReceiptLimited(p0 context.Context, p1 ethtypes.EthHash, p2 abi.ChainEpoch) (*EthTxReceipt, error) {\n\tif s.Internal.EthGetTransactionReceiptLimited == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.EthGetTransactionReceiptLimited(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthHash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*EthTxReceipt",
                "description": "*EthTxReceipt",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "transactionHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "transactionIndex": "0x5",
                            "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "blockNumber": "0x5",
                            "from": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "to": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "root": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                            "status": "0x5",
                            "contractAddress": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                            "cumulativeGasUsed": "0x5",
                            "gasUsed": "0x5",
                            "effectiveGasPrice": "0x0",
                            "logsBloom": "0x07",
                            "logs": [
                                {
                                    "address": "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031",
                                    "data": "0x07",
                                    "topics": [
                                        "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                                    ],
                                    "removed": true,
                                    "logIndex": "0x5",
                                    "transactionIndex": "0x5",
                                    "transactionHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                    "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                    "blockNumber": "0x5"
                                }
                            ],
                            "type": "0x5"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "blockHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "blockNumber": {
                            "title": "number",
                            "type": "number"
                        },
                        "contractAddress": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "cumulativeGasUsed": {
                            "title": "number",
                            "type": "number"
                        },
                        "effectiveGasPrice": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "from": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "gasUsed": {
                            "title": "number",
                            "type": "number"
                        },
                        "logs": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "address": {
                                        "items": {
                                            "description": "Number is a number",
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "maxItems": 20,
                                        "minItems": 20,
                                        "type": "array"
                                    },
                                    "blockHash": {
                                        "items": {
                                            "description": "Number is a number",
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "maxItems": 32,
                                        "minItems": 32,
                                        "type": "array"
                                    },
                                    "blockNumber": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "data": {
                                        "items": {
                                            "description": "Number is a number",
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "type": "array"
                                    },
                                    "logIndex": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "removed": {
                                        "type": "boolean"
                                    },
                                    "topics": {
                                        "items": {
                                            "items": {
                                                "description": "Number is a number",
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "maxItems": 32,
                                            "minItems": 32,
                                            "type": "array"
                                        },
                                        "type": "array"
                                    },
                                    "transactionHash": {
                                        "items": {
                                            "description": "Number is a number",
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "maxItems": 32,
                                        "minItems": 32,
                                        "type": "array"
                                    },
                                    "transactionIndex": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "logsBloom": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "root": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "status": {
                            "title": "number",
                            "type": "number"
                        },
                        "to": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 20,
                            "minItems": 20,
                            "type": "array"
                        },
                        "transactionHash": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "maxItems": 32,
                            "minItems": 32,
                            "type": "array"
                        },
                        "transactionIndex": {
                            "title": "number",
                            "type": "number"
                        },
                        "type": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4222"
            }
        },
        {
            "name": "Filecoin.EthMaxPriorityFeePerGas",
            "description": "```go\nfunc (s *GatewayStruct) EthMaxPriorityFeePerGas(p0 context.Context) (ethtypes.EthBigInt, error) {\n\tif s.Internal.EthMaxPriorityFeePerGas == nil {\n\t\treturn *new(ethtypes.EthBigInt), ErrNotSupported\n\t}\n\treturn s.Internal.EthMaxPriorityFeePerGas(p0)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "ethtypes.EthBigInt",
                "description": "ethtypes.EthBigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4233"
            }
        },
        {
            "name": "Filecoin.EthNewBlockFilter",
            "description": "```go\nfunc (s *GatewayStruct) EthNewBlockFilter(p0 context.Context) (ethtypes.EthFilterID, error) {\n\tif s.Internal.EthNewBlockFilter == nil {\n\t\treturn *new(ethtypes.EthFilterID), ErrNotSupported\n\t}\n\treturn s.Internal.EthNewBlockFilter(p0)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "ethtypes.EthFilterID",
                "description": "ethtypes.EthFilterID",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "maxItems": 32,
                    "minItems": 32,
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4244"
            }
        },
        {
            "name": "Filecoin.EthNewFilter",
            "description": "```go\nfunc (s *GatewayStruct) EthNewFilter(p0 context.Context, p1 *ethtypes.EthFilterSpec) (ethtypes.EthFilterID, error) {\n\tif s.Internal.EthNewFilter == nil {\n\t\treturn *new(ethtypes.EthFilterID), ErrNotSupported\n\t}\n\treturn s.Internal.EthNewFilter(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*ethtypes.EthFilterSpec",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "fromBlock": "2301220",
                                "address": [
                                    "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031"
                                ],
                                "topics": null
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "address": {
                                "items": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 20,
                                    "minItems": 20,
                                    "type": "array"
                                },
                                "type": "array"
                            },
                            "blockHash": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 32,
                                "minItems": 32,
                                "type": "array"
                            },
                            "fromBlock": {
                                "type": "string"
                            },
                            "toBlock": {
                                "type": "string"
                            },
                            "topics": {
                                "items": {
                                    "items": {
                                        "items": {
                                            "description": "Number is a number",
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "maxItems": 32,
                                        "minItems": 32,
                                        "type": "array"
                                    },
                                    "type": "array"
                                },
                                "type": "array"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthFilterID",
                "description": "ethtypes.EthFilterID",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "maxItems": 32,
                    "minItems": 32,
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4255"
            }
        },
        {
            "name": "Filecoin.EthNewPendingTransactionFilter",
            "description": "```go\nfunc (s *GatewayStruct) EthNewPendingTransactionFilter(p0 context.Context) (ethtypes.EthFilterID, error) {\n\tif s.Internal.EthNewPendingTransactionFilter == nil {\n\t\treturn *new(ethtypes.EthFilterID), ErrNotSupported\n\t}\n\treturn s.Internal.EthNewPendingTransactionFilter(p0)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "ethtypes.EthFilterID",
                "description": "ethtypes.EthFilterID",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "maxItems": 32,
                    "minItems": 32,
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4266"
            }
        },
        {
            "name": "Filecoin.EthProtocolVersion",
            "description": "```go\nfunc (s *GatewayStruct) EthProtocolVersion(p0 context.Context) (ethtypes.EthUint64, error) {\n\tif s.Internal.EthProtocolVersion == nil {\n\t\treturn *new(ethtypes.EthUint64), ErrNotSupported\n\t}\n\treturn s.Internal.EthProtocolVersion(p0)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "ethtypes.EthUint64",
                "description": "ethtypes.EthUint64",
                "summary": "",
                "schema": {
                    "title": "number",
                    "description": "Number is a number",
                    "examples": [
                        "0x5"
                    ],
                    "type": [
                        "number"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4277"
            }
        },
        {
            "name": "Filecoin.EthSendRawTransaction",
            "description": "```go\nfunc (s *GatewayStruct) EthSendRawTransaction(p0 context.Context, p1 ethtypes.EthBytes) (ethtypes.EthHash, error) {\n\tif s.Internal.EthSendRawTransaction == nil {\n\t\treturn *new(ethtypes.EthHash), ErrNotSupported\n\t}\n\treturn s.Internal.EthSendRawTransaction(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthBytes",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x07"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthHash",
                "description": "ethtypes.EthHash",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "maxItems": 32,
                    "minItems": 32,
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4288"
            }
        },
        {
            "name": "Filecoin.EthSubscribe",
            "description": "```go\nfunc (s *GatewayStruct) EthSubscribe(p0 context.Context, p1 jsonrpc.RawParams) (ethtypes.EthSubscriptionID, error) {\n\tif s.Internal.EthSubscribe == nil {\n\t\treturn *new(ethtypes.EthSubscriptionID), ErrNotSupported\n\t}\n\treturn s.Internal.EthSubscribe(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "jsonrpc.RawParams",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Bw=="
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthSubscriptionID",
                "description": "ethtypes.EthSubscriptionID",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "maxItems": 32,
                    "minItems": 32,
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4299"
            }
        },
        {
            "name": "Filecoin.EthSyncing",
            "description": "```go\nfunc (s *GatewayStruct) EthSyncing(p0 context.Context) (ethtypes.EthSyncingResult, error) {\n\tif s.Internal.EthSyncing == nil {\n\t\treturn *new(ethtypes.EthSyncingResult), ErrNotSupported\n\t}\n\treturn s.Internal.EthSyncing(p0)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "ethtypes.EthSyncingResult",
                "description": "ethtypes.EthSyncingResult",
                "summary": "",
                "schema": {
                    "examples": [
                        false
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "CurrentBlock": {
                            "title": "number",
                            "type": "number"
                        },
                        "DoneSync": {
                            "type": "boolean"
                        },
                        "HighestBlock": {
                            "title": "number",
                            "type": "number"
                        },
                        "StartingBlock": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4310"
            }
        },
        {
            "name": "Filecoin.EthTraceBlock",
            "description": "```go\nfunc (s *GatewayStruct) EthTraceBlock(p0 context.Context, p1 string) ([]*ethtypes.EthTraceBlock, error) {\n\tif s.Internal.EthTraceBlock == nil {\n\t\treturn *new([]*ethtypes.EthTraceBlock), ErrNotSupported\n\t}\n\treturn s.Internal.EthTraceBlock(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*ethtypes.EthTraceBlock",
                "description": "[]*ethtypes.EthTraceBlock",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "type": "string value",
                                "error": "string value",
                                "subtraces": 123,
                                "traceAddress": [
                                    123
                                ],
                                "action": {},
                                "result": {},
                                "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                "blockNumber": 9,
                                "transactionHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                "transactionPosition": 123
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "action": {
                                    "additionalProperties": true,
                                    "type": "object"
                                },
                                "blockHash": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 32,
                                    "minItems": 32,
                                    "type": "array"
                                },
                                "blockNumber": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "error": {
                                    "type": "string"
                                },
                                "result": {
                                    "additionalProperties": true,
                                    "type": "object"
                                },
                                "subtraces": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "traceAddress": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "type": "array"
                                },
                                "transactionHash": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 32,
                                    "minItems": 32,
                                    "type": "array"
                                },
                                "transactionPosition": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4321"
            }
        },
        {
            "name": "Filecoin.EthTraceReplayBlockTransactions",
            "description": "```go\nfunc (s *GatewayStruct) EthTraceReplayBlockTransactions(p0 context.Context, p1 string, p2 []string) ([]*ethtypes.EthTraceReplayBlockTransaction, error) {\n\tif s.Internal.EthTraceReplayBlockTransactions == nil {\n\t\treturn *new([]*ethtypes.EthTraceReplayBlockTransaction), ErrNotSupported\n\t}\n\treturn s.Internal.EthTraceReplayBlockTransactions(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "[]string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                "string value"
                            ]
                        ],
                        "items": [
                            {
                                "type": [
                                    "string"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*ethtypes.EthTraceReplayBlockTransaction",
                "description": "[]*ethtypes.EthTraceReplayBlockTransaction",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "output": "0x07",
                                "stateDiff": "string value",
                                "trace": [
                                    {
                                        "type": "string value",
                                        "error": "string value",
                                        "subtraces": 123,
                                        "traceAddress": [
                                            123
                                        ],
                                        "action": {},
                                        "result": {}
                                    }
                                ],
                                "transactionHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                "vmTrace": "string value"
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "output": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "type": "array"
                                },
                                "stateDiff": {
                                    "type": "string"
                                },
                                "trace": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "action": {
                                                "additionalProperties": true,
                                                "type": "object"
                                            },
                                            "error": {
                                                "type": "string"
                                            },
                                            "result": {
                                                "additionalProperties": true,
                                                "type": "object"
                                            },
                                            "subtraces": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "traceAddress": {
                                                "items": {
                                                    "description": "Number is a number",
                                                    "title": "number",
                                                    "type": "number"
                                                },
                                                "type": "array"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "transactionHash": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 32,
                                    "minItems": 32,
                                    "type": "array"
                                },
                                "vmTrace": {
                                    "type": "string"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4332"
            }
        },
        {
            "name": "Filecoin.EthTraceTransaction",
            "description": "```go\nfunc (s *GatewayStruct) EthTraceTransaction(p0 context.Context, p1 string) ([]*ethtypes.EthTraceTransaction, error) {\n\tif s.Internal.EthTraceTransaction == nil {\n\t\treturn *new([]*ethtypes.EthTraceTransaction), ErrNotSupported\n\t}\n\treturn s.Internal.EthTraceTransaction(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*ethtypes.EthTraceTransaction",
                "description": "[]*ethtypes.EthTraceTransaction",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "type": "string value",
                                "error": "string value",
                                "subtraces": 123,
                                "traceAddress": [
                                    123
                                ],
                                "action": {},
                                "result": {},
                                "blockHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                "blockNumber": 9,
                                "transactionHash": "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e",
                                "transactionPosition": 123
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "action": {
                                    "additionalProperties": true,
                                    "type": "object"
                                },
                                "blockHash": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 32,
                                    "minItems": 32,
                                    "type": "array"
                                },
                                "blockNumber": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "error": {
                                    "type": "string"
                                },
                                "result": {
                                    "additionalProperties": true,
                                    "type": "object"
                                },
                                "subtraces": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "traceAddress": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "type": "array"
                                },
                                "transactionHash": {
                                    "items": {
                                        "description": "Number is a number",
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "maxItems": 32,
                                    "minItems": 32,
                                    "type": "array"
                                },
                                "transactionPosition": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4343"
            }
        },
        {
            "name": "Filecoin.EthUninstallFilter",
            "description": "```go\nfunc (s *GatewayStruct) EthUninstallFilter(p0 context.Context, p1 ethtypes.EthFilterID) (bool, error) {\n\tif s.Internal.EthUninstallFilter == nil {\n\t\treturn false, ErrNotSupported\n\t}\n\treturn s.Internal.EthUninstallFilter(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthFilterID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4354"
            }
        },
        {
            "name": "Filecoin.EthUnsubscribe",
            "description": "```go\nfunc (s *GatewayStruct) EthUnsubscribe(p0 context.Context, p1 ethtypes.EthSubscriptionID) (bool, error) {\n\tif s.Internal.EthUnsubscribe == nil {\n\t\treturn false, ErrNotSupported\n\t}\n\treturn s.Internal.EthUnsubscribe(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "ethtypes.EthSubscriptionID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0x37690cfec6c1bf4c3b9288c7a5d783e98731e90b0a4c177c2a374c7a9427355e"
                        ],
                        "items": [
                            {
                                "title": "number",
                                "description": "Number is a number",
                                "type": [
                                    "number"
                                ]
                            }
                        ],
                        "maxItems": 32,
                        "minItems": 32,
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4365"
            }
        },
        {
            "name": "Filecoin.FilecoinAddressToEthAddress",
            "description": "```go\nfunc (s *GatewayStruct) FilecoinAddressToEthAddress(p0 context.Context, p1 address.Address) (ethtypes.EthAddress, error) {\n\tif s.Internal.FilecoinAddressToEthAddress == nil {\n\t\treturn *new(ethtypes.EthAddress), ErrNotSupported\n\t}\n\treturn s.Internal.FilecoinAddressToEthAddress(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "ethtypes.EthAddress",
                "description": "ethtypes.EthAddress",
                "summary": "",
                "schema": {
                    "examples": [
                        "0x5cbeecf99d3fdb3f25e309cc264f240bb0664031"
                    ],
                    "items": [
                        {
                            "title": "number",
                            "description": "Number is a number",
                            "type": [
                                "number"
                            ]
                        }
                    ],
                    "maxItems": 20,
                    "minItems": 20,
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4376"
            }
        },
        {
            "name": "Filecoin.GasEstimateGasPremium",
            "description": "```go\nfunc (s *GatewayStruct) GasEstimateGasPremium(p0 context.Context, p1 uint64, p2 address.Address, p3 int64, p4 types.TipSetKey) (types.BigInt, error) {\n\tif s.Internal.GasEstimateGasPremium == nil {\n\t\treturn *new(types.BigInt), ErrNotSupported\n\t}\n\treturn s.Internal.GasEstimateGasPremium(p0, p1, p2, p3, p4)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            42
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "int64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            9
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4387"
            }
        },
        {
            "name": "Filecoin.GasEstimateMessageGas",
            "description": "```go\nfunc (s *GatewayStruct) GasEstimateMessageGas(p0 context.Context, p1 *types.Message, p2 *MessageSendSpec, p3 types.TipSetKey) (*types.Message, error) {\n\tif s.Internal.GasEstimateMessageGas == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.GasEstimateMessageGas(p0, p1, p2, p3)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*types.Message",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "From": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasFeeCap": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasLimit": {
                                "title": "number",
                                "type": "number"
                            },
                            "GasPremium": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Method": {
                                "title": "number",
                                "type": "number"
                            },
                            "Nonce": {
                                "title": "number",
                                "type": "number"
                            },
                            "Params": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "To": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Value": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Version": {
                                "title": "number",
                                "type": "number"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "*MessageSendSpec",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "MaxFee": "0",
                                "MsgUuid": "07070707-0707-0707-0707-070707070707",
                                "MaximizeFeeCap": true
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "MaxFee": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "MaximizeFeeCap": {
                                "type": "boolean"
                            },
                            "MsgUuid": {
                                "items": {
                                    "description": "Number is a number",
                                    "title": "number",
                                    "type": "number"
                                },
                                "maxItems": 16,
                                "minItems": 16,
                                "type": "array"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.Message",
                "description": "*types.Message",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Version": 42,
                            "To": "f01234",
                            "From": "f01234",
                            "Nonce": 42,
                            "Value": "0",
                            "GasLimit": 9,
                            "GasFeeCap": "0",
                            "GasPremium": "0",
                            "Method": 1,
                            "Params": "Ynl0ZSBhcnJheQ==",
                            "CID": {
                                "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "From": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "GasFeeCap": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "GasLimit": {
                            "title": "number",
                            "type": "number"
                        },
                        "GasPremium": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Method": {
                            "title": "number",
                            "type": "number"
                        },
                        "Nonce": {
                            "title": "number",
                            "type": "number"
                        },
                        "Params": {
                            "media": {
                                "binaryEncoding": "base64"
                            },
                            "type": "string"
                        },
                        "To": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Value": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Version": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4398"
            }
        },
        {
            "name": "Filecoin.GetActorEventsRaw",
            "description": "```go\nfunc (s *GatewayStruct) GetActorEventsRaw(p0 context.Context, p1 *types.ActorEventFilter) ([]*types.ActorEvent, error) {\n\tif s.Internal.GetActorEventsRaw == nil {\n\t\treturn *new([]*types.ActorEvent), ErrNotSupported\n\t}\n\treturn s.Internal.GetActorEventsRaw(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*types.ActorEventFilter",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "addresses": [
                                    "f01234"
                                ],
                                "fields": {
                                    "abc": [
                                        {
                                            "codec": 81,
                                            "value": "ZGRhdGE="
                                        }
                                    ]
                                },
                                "fromHeight": 1010,
                                "toHeight": 1020
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "addresses": {
                                "items": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "fields": {
                                "patternProperties": {
                                    ".*": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "codec": {
                                                    "title": "number",
                                                    "type": "number"
                                                },
                                                "value": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "fromHeight": {
                                "title": "number",
                                "type": "number"
                            },
                            "tipsetKey": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "toHeight": {
                                "title": "number",
                                "type": "number"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*types.ActorEvent",
                "description": "[]*types.ActorEvent",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "entries": [
                                    {
                                        "Flags": 7,
                                        "Key": "string value",
                                        "Codec": 42,
                                        "Value": "Ynl0ZSBhcnJheQ=="
                                    }
                                ],
                                "emitter": "f01234",
                                "reverted": true,
                                "height": 10101,
                                "tipsetKey": [
                                    {
                                        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                    },
                                    {
                                        "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                    }
                                ],
                                "msgCid": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                }
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "emitter": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "entries": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Codec": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "Flags": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "Key": {
                                                "type": "string"
                                            },
                                            "Value": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "height": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "msgCid": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "reverted": {
                                    "type": "boolean"
                                },
                                "tipsetKey": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4409"
            }
        },
        {
            "name": "Filecoin.MinerGetBaseInfo",
            "description": "```go\nfunc (s *GatewayStruct) MinerGetBaseInfo(p0 context.Context, p1 address.Address, p2 abi.ChainEpoch, p3 types.TipSetKey) (*MiningBaseInfo, error) {\n\tif s.Internal.MinerGetBaseInfo == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.MinerGetBaseInfo(p0, p1, p2, p3)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MiningBaseInfo",
                "description": "*MiningBaseInfo",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "MinerPower": "0",
                            "NetworkPower": "0",
                            "Sectors": [
                                {
                                    "SealProof": 8,
                                    "SectorNumber": 9,
                                    "SectorKey": {
                                        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                    },
                                    "SealedCID": {
                                        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                    }
                                }
                            ],
                            "WorkerKey": "f01234",
                            "SectorSize": 34359738368,
                            "PrevBeaconEntry": {
                                "Round": 42,
                                "Data": "Ynl0ZSBhcnJheQ=="
                            },
                            "BeaconEntries": [
                                {
                                    "Round": 42,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                }
                            ],
                            "EligibleForMining": true
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "BeaconEntries": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Round": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "EligibleForMining": {
                            "type": "boolean"
                        },
                        "MinerPower": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "NetworkPower": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "PrevBeaconEntry": {
                            "additionalProperties": false,
                            "properties": {
                                "Data": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "Round": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "SectorSize": {
                            "title": "number",
                            "type": "number"
                        },
                        "Sectors": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "SealProof": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "SealedCID": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "SectorKey": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "SectorNumber": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "WorkerKey": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4420"
            }
        },
        {
            "name": "Filecoin.MpoolGetNonce",
            "description": "```go\nfunc (s *GatewayStruct) MpoolGetNonce(p0 context.Context, p1 address.Address) (uint64, error) {\n\tif s.Internal.MpoolGetNonce == nil {\n\t\treturn 0, ErrNotSupported\n\t}\n\treturn s.Internal.MpoolGetNonce(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "uint64",
                "description": "uint64",
                "summary": "",
                "schema": {
                    "title": "number",
                    "description": "Number is a number",
                    "examples": [
                        42
                    ],
                    "type": [
                        "number"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4431"
            }
        },
        {
            "name": "Filecoin.MpoolPending",
            "description": "```go\nfunc (s *GatewayStruct) MpoolPending(p0 context.Context, p1 types.TipSetKey) ([]*types.SignedMessage, error) {\n\tif s.Internal.MpoolPending == nil {\n\t\treturn *new([]*types.SignedMessage), ErrNotSupported\n\t}\n\treturn s.Internal.MpoolPending(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*types.SignedMessage",
                "description": "[]*types.SignedMessage",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "Message": {
                                    "Version": 42,
                                    "To": "f01234",
                                    "From": "f01234",
                                    "Nonce": 42,
                                    "Value": "0",
                                    "GasLimit": 9,
                                    "GasFeeCap": "0",
                                    "GasPremium": "0",
                                    "Method": 1,
                                    "Params": "Ynl0ZSBhcnJheQ==",
                                    "CID": {
                                        "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                    }
                                },
                                "Signature": {
                                    "Type": 2,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                },
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Message": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "From": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasFeeCap": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasLimit": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "GasPremium": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Method": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Nonce": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Params": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "To": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Value": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Version": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Signature": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Type": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4442"
            }
        },
        {
            "name": "Filecoin.MpoolPush",
            "description": "```go\nfunc (s *GatewayStruct) MpoolPush(p0 context.Context, p1 *types.SignedMessage) (cid.Cid, error) {\n\tif s.Internal.MpoolPush == nil {\n\t\treturn *new(cid.Cid), ErrNotSupported\n\t}\n\treturn s.Internal.MpoolPush(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*types.SignedMessage",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Message": {
                                    "Version": 42,
                                    "To": "f01234",
                                    "From": "f01234",
                                    "Nonce": 42,
                                    "Value": "0",
                                    "GasLimit": 9,
                                    "GasFeeCap": "0",
                                    "GasPremium": "0",
                                    "Method": 1,
                                    "Params": "Ynl0ZSBhcnJheQ==",
                                    "CID": {
                                        "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                    }
                                },
                                "Signature": {
                                    "Type": 2,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                },
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "additionalProperties": false,
                                "properties": {
                                    "From": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasFeeCap": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasLimit": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "GasPremium": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Method": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Nonce": {
                                        "title": "number",
                                        "type": "number"
                                    },
                                    "Params": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "To": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Value": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Version": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "Signature": {
                                "additionalProperties": false,
                                "properties": {
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Type": {
                                        "title": "number",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4453"
            }
        },
        {
            "name": "Filecoin.MsigGetAvailableBalance",
            "description": "```go\nfunc (s *GatewayStruct) MsigGetAvailableBalance(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (types.BigInt, error) {\n\tif s.Internal.MsigGetAvailableBalance == nil {\n\t\treturn *new(types.BigInt), ErrNotSupported\n\t}\n\treturn s.Internal.MsigGetAvailableBalance(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4464"
            }
        },
        {
            "name": "Filecoin.MsigGetPending",
            "description": "```go\nfunc (s *GatewayStruct) MsigGetPending(p0 context.Context, p1 address.Address, p2 types.TipSetKey) ([]*MsigTransaction, error) {\n\tif s.Internal.MsigGetPending == nil {\n\t\treturn *new([]*MsigTransaction), ErrNotSupported\n\t}\n\treturn s.Internal.MsigGetPending(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*MsigTransaction",
                "description": "[]*MsigTransaction",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "ID": 9,
                                "To": "f01234",
                                "Value": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "Approved": [
                                    "f01234"
                                ]
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Approved": {
                                    "items": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "ID": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Method": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4475"
            }
        },
        {
            "name": "Filecoin.MsigGetVested",
            "description": "```go\nfunc (s *GatewayStruct) MsigGetVested(p0 context.Context, p1 address.Address, p2 types.TipSetKey, p3 types.TipSetKey) (types.BigInt, error) {\n\tif s.Internal.MsigGetVested == nil {\n\t\treturn *new(types.BigInt), ErrNotSupported\n\t}\n\treturn s.Internal.MsigGetVested(p0, p1, p2, p3)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4486"
            }
        },
        {
            "name": "Filecoin.MsigGetVestingSchedule",
            "description": "```go\nfunc (s *GatewayStruct) MsigGetVestingSchedule(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (MsigVesting, error) {\n\tif s.Internal.MsigGetVestingSchedule == nil {\n\t\treturn *new(MsigVesting), ErrNotSupported\n\t}\n\treturn s.Internal.MsigGetVestingSchedule(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "MsigVesting",
                "description": "MsigVesting",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "InitialBalance": "0",
                            "StartEpoch": 10101,
                            "UnlockDuration": 10101
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "InitialBalance": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "StartEpoch": {
                            "title": "number",
                            "type": "number"
                        },
                        "UnlockDuration": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4497"
            }
        },
        {
            "name": "Filecoin.NetListening",
            "description": "```go\nfunc (s *GatewayStruct) NetListening(p0 context.Context) (bool, error) {\n\tif s.Internal.NetListening == nil {\n\t\treturn false, ErrNotSupported\n\t}\n\treturn s.Internal.NetListening(p0)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4508"
            }
        },
        {
            "name": "Filecoin.NetVersion",
            "description": "```go\nfunc (s *GatewayStruct) NetVersion(p0 context.Context) (string, error) {\n\tif s.Internal.NetVersion == nil {\n\t\treturn \"\", ErrNotSupported\n\t}\n\treturn s.Internal.NetVersion(p0)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "string",
                "description": "string",
                "summary": "",
                "schema": {
                    "examples": [
                        "string value"
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4519"
            }
        },
        {
            "name": "Filecoin.StateAccountKey",
            "description": "```go\nfunc (s *GatewayStruct) StateAccountKey(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (address.Address, error) {\n\tif s.Internal.StateAccountKey == nil {\n\t\treturn *new(address.Address), ErrNotSupported\n\t}\n\treturn s.Internal.StateAccountKey(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "address.Address",
                "description": "address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4530"
            }
        },
        {
            "name": "Filecoin.StateCall",
            "description": "```go\nfunc (s *GatewayStruct) StateCall(p0 context.Context, p1 *types.Message, p2 types.TipSetKey) (*InvocResult, error) {\n\tif s.Internal.StateCall == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateCall(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "*types.Message",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "From": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasFeeCap": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasLimit": {
                                "title": "number",
                                "type": "number"
                            },
                            "GasPremium": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Method": {
                                "title": "number",
                                "type": "number"
                            },
                            "Nonce": {
                                "title": "number",
                                "type": "number"
                            },
                            "Params": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "To": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Value": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Version": {
                                "title": "number",
                                "type": "number"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*InvocResult",
                "description": "*InvocResult",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "MsgCid": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Msg": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "MsgRct": {
                                "ExitCode": 0,
                                "Return": "Ynl0ZSBhcnJheQ==",
                                "GasUsed": 9,
                                "EventsRoot": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                }
                            },
                            "GasCost": {
                                "Message": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "GasUsed": "0",
                                "BaseFeeBurn": "0",
                                "OverEstimationBurn": "0",
                                "MinerPenalty": "0",
                                "MinerTip": "0",
                                "Refund": "0",
                                "TotalCost": "0"
                            },
                            "ExecutionTrace": {
                                "Msg": {
                                    "From": "f01234",
                                    "To": "f01234",
                                    "Value": "0",
                                    "Method": 1,
                                    "Params": "Ynl0ZSBhcnJheQ==",
                                    "ParamsCodec": 42,
                                    "GasLimit": 42,
                                    "ReadOnly": true
                                },
                                "MsgRct": {
                                    "ExitCode": 0,
                                    "Return": "Ynl0ZSBhcnJheQ==",
                                    "ReturnCodec": 42
                                },
                                "InvokedActor": {
                                    "Id": 1000,
                                    "State": {
                                        "Code": {
                                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                        },
                                        "Head": {
                                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                        },
                                        "Nonce": 42,
                                        "Balance": "0",
                                        "DelegatedAddress": "f01234"
                                    }
                                },
                                "GasCharges": [
                                    {
                                        "Name": "string value",
                                        "tg": 9,
                                        "cg": 9,
                                        "sg": 9,
                                        "tt": 60000000000
                                    }
                                ],
                                "Subcalls": [
                                    {
                                        "Msg": {
                                            "From": "f01234",
                                            "To": "f01234",
                                            "Value": "0",
                                            "Method": 1,
                                            "Params": "Ynl0ZSBhcnJheQ==",
                                            "ParamsCodec": 42,
                                            "GasLimit": 42,
                                            "ReadOnly": true
                                        },
                                        "MsgRct": {
                                            "ExitCode": 0,
                                            "Return": "Ynl0ZSBhcnJheQ==",
                                            "ReturnCodec": 42
                                        },
                                        "InvokedActor": {
                                            "Id": 1000,
                                            "State": {
                                                "Code": {
                                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                                },
                                                "Head": {
                                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                                },
                                                "Nonce": 42,
                                                "Balance": "0",
                                                "DelegatedAddress": "f01234"
                                            }
                                        },
                                        "GasCharges": [
                                            {
                                                "Name": "string value",
                                                "tg": 9,
                                                "cg": 9,
                                                "sg": 9,
                                                "tt": 60000000000
                                            }
                                        ],
                                        "Subcalls": null
                                    }
                                ]
                            },
                            "Error": "string value",
                            "Duration": 60000000000
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Duration": {
                            "title": "number",
                            "type": "number"
                        },
                        "Error": {
                            "type": "string"
                        },
                        "ExecutionTrace": {
                            "additionalProperties": false,
                            "properties": {
                                "GasCharges": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Name": {
                                                "type": "string"
                                            },
                                            "cg": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "sg": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "tg": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "tt": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "InvokedActor": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Id": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "State": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "Balance": {
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                "Code": {
                                                    "title": "Content Identifier",
                                                    "type": "string"
                                                },
                                                "DelegatedAddress": {
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                "Head": {
                                                    "title": "Content Identifier",
                                                    "type": "string"
                                                },
                                                "Nonce": {
                                                    "title": "number",
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Msg": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "From": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasLimit": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Method": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Params": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "ParamsCodec": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "ReadOnly": {
                                            "type": "boolean"
                                        },
                                        "To": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Value": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "MsgRct": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "ExitCode": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Return": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "ReturnCodec": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Subcalls": {
                                    "items": {},
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "GasCost": {
                            "additionalProperties": false,
                            "properties": {
                                "BaseFeeBurn": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasUsed": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Message": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "MinerPenalty": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "MinerTip": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "OverEstimationBurn": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Refund": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "TotalCost": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "Msg": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "MsgCid": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "MsgRct": {
                            "additionalProperties": false,
                            "properties": {
                                "EventsRoot": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "ExitCode": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasUsed": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Return": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4541"
            }
        },
        {
            "name": "Filecoin.StateDealProviderCollateralBounds",
            "description": "```go\nfunc (s *GatewayStruct) StateDealProviderCollateralBounds(p0 context.Context, p1 abi.PaddedPieceSize, p2 bool, p3 types.TipSetKey) (DealCollateralBounds, error) {\n\tif s.Internal.StateDealProviderCollateralBounds == nil {\n\t\treturn *new(DealCollateralBounds), ErrNotSupported\n\t}\n\treturn s.Internal.StateDealProviderCollateralBounds(p0, p1, p2, p3)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "abi.PaddedPieceSize",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            1032
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "DealCollateralBounds",
                "description": "DealCollateralBounds",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Min": "0",
                            "Max": "0"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Max": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Min": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4552"
            }
        },
        {
            "name": "Filecoin.StateDecodeParams",
            "description": "```go\nfunc (s *GatewayStruct) StateDecodeParams(p0 context.Context, p1 address.Address, p2 abi.MethodNum, p3 []byte, p4 types.TipSetKey) (interface{}, error) {\n\tif s.Internal.StateDecodeParams == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateDecodeParams(p0, p1, p2, p3, p4)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "abi.MethodNum",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            1
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "interface{}",
                "description": "interface{}",
                "summary": "",
                "schema": {
                    "examples": [
                        {}
                    ],
                    "additionalProperties": true,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4563"
            }
        },
        {
            "name": "Filecoin.StateGetActor",
            "description": "```go\nfunc (s *GatewayStruct) StateGetActor(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (*types.Actor, error) {\n\tif s.Internal.StateGetActor == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateGetActor(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.Actor",
                "description": "*types.Actor",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Code": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Head": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Nonce": 42,
                            "Balance": "0",
                            "DelegatedAddress": "f01234"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Balance": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Code": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "DelegatedAddress": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Head": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Nonce": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4574"
            }
        },
        {
            "name": "Filecoin.StateGetAllocation",
            "description": "```go\nfunc (s *GatewayStruct) StateGetAllocation(p0 context.Context, p1 address.Address, p2 verifregtypes.AllocationId, p3 types.TipSetKey) (*verifregtypes.Allocation, error) {\n\tif s.Internal.StateGetAllocation == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateGetAllocation(p0, p1, p2, p3)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "verifregtypes.AllocationId",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            0
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*verifregtypes.Allocation",
                "description": "*verifregtypes.Allocation",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Client": 1000,
                            "Provider": 1000,
                            "Data": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Size": 1032,
                            "TermMin": 10101,
                            "TermMax": 10101,
                            "Expiration": 10101
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Client": {
                            "title": "number",
                            "type": "number"
                        },
                        "Data": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Expiration": {
                            "title": "number",
                            "type": "number"
                        },
                        "Provider": {
                            "title": "number",
                            "type": "number"
                        },
                        "Size": {
                            "title": "number",
                            "type": "number"
                        },
                        "TermMax": {
                            "title": "number",
                            "type": "number"
                        },
                        "TermMin": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4585"
            }
        },
        {
            "name": "Filecoin.StateGetAllocationForPendingDeal",
            "description": "```go\nfunc (s *GatewayStruct) StateGetAllocationForPendingDeal(p0 context.Context, p1 abi.DealID, p2 types.TipSetKey) (*verifregtypes.Allocation, error) {\n\tif s.Internal.StateGetAllocationForPendingDeal == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateGetAllocationForPendingDeal(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "abi.DealID",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            5432
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*verifregtypes.Allocation",
                "description": "*verifregtypes.Allocation",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Client": 1000,
                            "Provider": 1000,
                            "Data": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Size": 1032,
                            "TermMin": 10101,
                            "TermMax": 10101,
                            "Expiration": 10101
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Client": {
                            "title": "number",
                            "type": "number"
                        },
                        "Data": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Expiration": {
                            "title": "number",
                            "type": "number"
                        },
                        "Provider": {
                            "title": "number",
                            "type": "number"
                        },
                        "Size": {
                            "title": "number",
                            "type": "number"
                        },
                        "TermMax": {
                            "title": "number",
                            "type": "number"
                        },
                        "TermMin": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4596"
            }
        },
        {
            "name": "Filecoin.StateGetAllocations",
            "description": "```go\nfunc (s *GatewayStruct) StateGetAllocations(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (map[verifregtypes.AllocationId]verifregtypes.Allocation, error) {\n\tif s.Internal.StateGetAllocations == nil {\n\t\treturn *new(map[verifregtypes.AllocationId]verifregtypes.Allocation), ErrNotSupported\n\t}\n\treturn s.Internal.StateGetAllocations(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "map[verifregtypes.AllocationId]verifregtypes.Allocation",
                "description": "map[verifregtypes.AllocationId]verifregtypes.Allocation",
                "summary": "",
                "schema": {
                    "examples": [
                        {}
                    ],
                    "patternProperties": {
                        ".*": {
                            "additionalProperties": false,
                            "properties": {
                                "Client": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Data": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "Expiration": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Provider": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Size": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "TermMax": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "TermMin": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4607"
            }
        },
        {
            "name": "Filecoin.StateGetClaim",
            "description": "```go\nfunc (s *GatewayStruct) StateGetClaim(p0 context.Context, p1 address.Address, p2 verifregtypes.ClaimId, p3 types.TipSetKey) (*verifregtypes.Claim, error) {\n\tif s.Internal.StateGetClaim == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateGetClaim(p0, p1, p2, p3)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "verifregtypes.ClaimId",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            0
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*verifregtypes.Claim",
                "description": "*verifregtypes.Claim",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Provider": 1000,
                            "Client": 1000,
                            "Data": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Size": 1032,
                            "TermMin": 10101,
                            "TermMax": 10101,
                            "TermStart": 10101,
                            "Sector": 9
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Client": {
                            "title": "number",
                            "type": "number"
                        },
                        "Data": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Provider": {
                            "title": "number",
                            "type": "number"
                        },
                        "Sector": {
                            "title": "number",
                            "type": "number"
                        },
                        "Size": {
                            "title": "number",
                            "type": "number"
                        },
                        "TermMax": {
                            "title": "number",
                            "type": "number"
                        },
                        "TermMin": {
                            "title": "number",
                            "type": "number"
                        },
                        "TermStart": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4618"
            }
        },
        {
            "name": "Filecoin.StateGetClaims",
            "description": "```go\nfunc (s *GatewayStruct) StateGetClaims(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (map[verifregtypes.ClaimId]verifregtypes.Claim, error) {\n\tif s.Internal.StateGetClaims == nil {\n\t\treturn *new(map[verifregtypes.ClaimId]verifregtypes.Claim), ErrNotSupported\n\t}\n\treturn s.Internal.StateGetClaims(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "map[verifregtypes.ClaimId]verifregtypes.Claim",
                "description": "map[verifregtypes.ClaimId]verifregtypes.Claim",
                "summary": "",
                "schema": {
                    "examples": [
                        {}
                    ],
                    "patternProperties": {
                        ".*": {
                            "additionalProperties": false,
                            "properties": {
                                "Client": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Data": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "Provider": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Sector": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Size": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "TermMax": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "TermMin": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "TermStart": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4629"
            }
        },
        {
            "name": "Filecoin.StateListMiners",
            "description": "```go\nfunc (s *GatewayStruct) StateListMiners(p0 context.Context, p1 types.TipSetKey) ([]address.Address, error) {\n\tif s.Internal.StateListMiners == nil {\n\t\treturn *new([]address.Address), ErrNotSupported\n\t}\n\treturn s.Internal.StateListMiners(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]address.Address",
                "description": "[]address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            "f01234"
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4640"
            }
        },
        {
            "name": "Filecoin.StateLookupID",
            "description": "```go\nfunc (s *GatewayStruct) StateLookupID(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (address.Address, error) {\n\tif s.Internal.StateLookupID == nil {\n\t\treturn *new(address.Address), ErrNotSupported\n\t}\n\treturn s.Internal.StateLookupID(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "address.Address",
                "description": "address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4651"
            }
        },
        {
            "name": "Filecoin.StateMarketBalance",
            "description": "```go\nfunc (s *GatewayStruct) StateMarketBalance(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (MarketBalance, error) {\n\tif s.Internal.StateMarketBalance == nil {\n\t\treturn *new(MarketBalance), ErrNotSupported\n\t}\n\treturn s.Internal.StateMarketBalance(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "MarketBalance",
                "description": "MarketBalance",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Escrow": "0",
                            "Locked": "0"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Escrow": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Locked": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4662"
            }
        },
        {
            "name": "Filecoin.StateMarketStorageDeal",
            "description": "```go\nfunc (s *GatewayStruct) StateMarketStorageDeal(p0 context.Context, p1 abi.DealID, p2 types.TipSetKey) (*MarketDeal, error) {\n\tif s.Internal.StateMarketStorageDeal == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateMarketStorageDeal(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "abi.DealID",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            5432
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MarketDeal",
                "description": "*MarketDeal",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Proposal": {
                                "PieceCID": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "PieceSize": 1032,
                                "VerifiedDeal": true,
                                "Client": "f01234",
                                "Provider": "f01234",
                                "Label": "",
                                "StartEpoch": 10101,
                                "EndEpoch": 10101,
                                "StoragePricePerEpoch": "0",
                                "ProviderCollateral": "0",
                                "ClientCollateral": "0"
                            },
                            "State": {
                                "SectorNumber": 9,
                                "SectorStartEpoch": 10101,
                                "LastUpdatedEpoch": 10101,
                                "SlashEpoch": 10101
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Proposal": {
                            "additionalProperties": false,
                            "properties": {
                                "Client": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ClientCollateral": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "EndEpoch": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Label": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "PieceCID": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "PieceSize": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Provider": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ProviderCollateral": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "StartEpoch": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "StoragePricePerEpoch": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "VerifiedDeal": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "State": {
                            "additionalProperties": false,
                            "properties": {
                                "LastUpdatedEpoch": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "SectorNumber": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "SectorStartEpoch": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "SlashEpoch": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4673"
            }
        },
        {
            "name": "Filecoin.StateMinerDeadlines",
            "description": "```go\nfunc (s *GatewayStruct) StateMinerDeadlines(p0 context.Context, p1 address.Address, p2 types.TipSetKey) ([]Deadline, error) {\n\tif s.Internal.StateMinerDeadlines == nil {\n\t\treturn *new([]Deadline), ErrNotSupported\n\t}\n\treturn s.Internal.StateMinerDeadlines(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]Deadline",
                "description": "[]Deadline",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "PostSubmissions": [
                                    5,
                                    1
                                ],
                                "DisputableProofCount": 42
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "DisputableProofCount": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "PostSubmissions": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4684"
            }
        },
        {
            "name": "Filecoin.StateMinerInfo",
            "description": "```go\nfunc (s *GatewayStruct) StateMinerInfo(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (MinerInfo, error) {\n\tif s.Internal.StateMinerInfo == nil {\n\t\treturn *new(MinerInfo), ErrNotSupported\n\t}\n\treturn s.Internal.StateMinerInfo(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "MinerInfo",
                "description": "MinerInfo",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Owner": "f01234",
                            "Worker": "f01234",
                            "NewWorker": "f01234",
                            "ControlAddresses": [
                                "f01234"
                            ],
                            "WorkerChangeEpoch": 10101,
                            "PeerId": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",
                            "Multiaddrs": [
                                "Ynl0ZSBhcnJheQ=="
                            ],
                            "WindowPoStProofType": 8,
                            "SectorSize": 34359738368,
                            "WindowPoStPartitionSectors": 42,
                            "ConsensusFaultElapsed": 10101,
                            "PendingOwnerAddress": "f01234",
                            "Beneficiary": "f01234",
                            "BeneficiaryTerm": {
                                "Quota": "0",
                                "UsedQuota": "0",
                                "Expiration": 10101
                            },
                            "PendingBeneficiaryTerm": {
                                "NewBeneficiary": "f01234",
                                "NewQuota": "0",
                                "NewExpiration": 10101,
                                "ApprovedByBeneficiary": true,
                                "ApprovedByNominee": true
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Beneficiary": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "BeneficiaryTerm": {
                            "additionalProperties": false,
                            "properties": {
                                "Expiration": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Quota": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "UsedQuota": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "ConsensusFaultElapsed": {
                            "title": "number",
                            "type": "number"
                        },
                        "ControlAddresses": {
                            "items": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "Multiaddrs": {
                            "items": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "NewWorker": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Owner": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "PeerId": {
                            "type": "string"
                        },
                        "PendingBeneficiaryTerm": {
                            "additionalProperties": false,
                            "properties": {
                                "ApprovedByBeneficiary": {
                                    "type": "boolean"
                                },
                                "ApprovedByNominee": {
                                    "type": "boolean"
                                },
                                "NewBeneficiary": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "NewExpiration": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "NewQuota": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "PendingOwnerAddress": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "SectorSize": {
                            "title": "number",
                            "type": "number"
                        },
                        "WindowPoStPartitionSectors": {
                            "title": "number",
                            "type": "number"
                        },
                        "WindowPoStProofType": {
                            "title": "number",
                            "type": "number"
                        },
                        "Worker": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "WorkerChangeEpoch": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4695"
            }
        },
        {
            "name": "Filecoin.StateMinerPower",
            "description": "```go\nfunc (s *GatewayStruct) StateMinerPower(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (*MinerPower, error) {\n\tif s.Internal.StateMinerPower == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateMinerPower(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MinerPower",
                "description": "*MinerPower",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "MinerPower": {
                                "RawBytePower": "0",
                                "QualityAdjPower": "0"
                            },
                            "TotalPower": {
                                "RawBytePower": "0",
                                "QualityAdjPower": "0"
                            },
                            "HasMinPower": true
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "HasMinPower": {
                            "type": "boolean"
                        },
                        "MinerPower": {
                            "additionalProperties": false,
                            "properties": {
                                "QualityAdjPower": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "RawBytePower": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "TotalPower": {
                            "additionalProperties": false,
                            "properties": {
                                "QualityAdjPower": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "RawBytePower": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4706"
            }
        },
        {
            "name": "Filecoin.StateMinerProvingDeadline",
            "description": "```go\nfunc (s *GatewayStruct) StateMinerProvingDeadline(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (*dline.Info, error) {\n\tif s.Internal.StateMinerProvingDeadline == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateMinerProvingDeadline(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*dline.Info",
                "description": "*dline.Info",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "CurrentEpoch": 10101,
                            "PeriodStart": 10101,
                            "Index": 42,
                            "Open": 10101,
                            "Close": 10101,
                            "Challenge": 10101,
                            "FaultCutoff": 10101,
                            "WPoStPeriodDeadlines": 42,
                            "WPoStProvingPeriod": 10101,
                            "WPoStChallengeWindow": 10101,
                            "WPoStChallengeLookback": 10101,
                            "FaultDeclarationCutoff": 10101
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Challenge": {
                            "title": "number",
                            "type": "number"
                        },
                        "Close": {
                            "title": "number",
                            "type": "number"
                        },
                        "CurrentEpoch": {
                            "title": "number",
                            "type": "number"
                        },
                        "FaultCutoff": {
                            "title": "number",
                            "type": "number"
                        },
                        "FaultDeclarationCutoff": {
                            "title": "number",
                            "type": "number"
                        },
                        "Index": {
                            "title": "number",
                            "type": "number"
                        },
                        "Open": {
                            "title": "number",
                            "type": "number"
                        },
                        "PeriodStart": {
                            "title": "number",
                            "type": "number"
                        },
                        "WPoStChallengeLookback": {
                            "title": "number",
                            "type": "number"
                        },
                        "WPoStChallengeWindow": {
                            "title": "number",
                            "type": "number"
                        },
                        "WPoStPeriodDeadlines": {
                            "title": "number",
                            "type": "number"
                        },
                        "WPoStProvingPeriod": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4717"
            }
        },
        {
            "name": "Filecoin.StateMinerSectorCount",
            "description": "```go\nfunc (s *GatewayStruct) StateMinerSectorCount(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (MinerSectors, error) {\n\tif s.Internal.StateMinerSectorCount == nil {\n\t\treturn *new(MinerSectors), ErrNotSupported\n\t}\n\treturn s.Internal.StateMinerSectorCount(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "MinerSectors",
                "description": "MinerSectors",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Live": 42,
                            "Active": 42,
                            "Faulty": 42
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Active": {
                            "title": "number",
                            "type": "number"
                        },
                        "Faulty": {
                            "title": "number",
                            "type": "number"
                        },
                        "Live": {
                            "title": "number",
                            "type": "number"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4728"
            }
        },
        {
            "name": "Filecoin.StateNetworkName",
            "description": "```go\nfunc (s *GatewayStruct) StateNetworkName(p0 context.Context) (dtypes.NetworkName, error) {\n\tif s.Internal.StateNetworkName == nil {\n\t\treturn *new(dtypes.NetworkName), ErrNotSupported\n\t}\n\treturn s.Internal.StateNetworkName(p0)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "dtypes.NetworkName",
                "description": "dtypes.NetworkName",
                "summary": "",
                "schema": {
                    "examples": [
                        "lotus"
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4739"
            }
        },
        {
            "name": "Filecoin.StateNetworkVersion",
            "description": "```go\nfunc (s *GatewayStruct) StateNetworkVersion(p0 context.Context, p1 types.TipSetKey) (apitypes.NetworkVersion, error) {\n\tif s.Internal.StateNetworkVersion == nil {\n\t\treturn *new(apitypes.NetworkVersion), ErrNotSupported\n\t}\n\treturn s.Internal.StateNetworkVersion(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "apitypes.NetworkVersion",
                "description": "apitypes.NetworkVersion",
                "summary": "",
                "schema": {
                    "title": "number",
                    "description": "Number is a number",
                    "examples": [
                        23
                    ],
                    "type": [
                        "number"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4750"
            }
        },
        {
            "name": "Filecoin.StateReadState",
            "description": "```go\nfunc (s *GatewayStruct) StateReadState(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (*ActorState, error) {\n\tif s.Internal.StateReadState == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateReadState(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*ActorState",
                "description": "*ActorState",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Balance": "0",
                            "Code": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "State": {}
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Balance": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Code": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "State": {
                            "additionalProperties": true,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4761"
            }
        },
        {
            "name": "Filecoin.StateReplay",
            "description": "```go\nfunc (s *GatewayStruct) StateReplay(p0 context.Context, p1 types.TipSetKey, p2 cid.Cid) (*InvocResult, error) {\n\tif s.Internal.StateReplay == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateReplay(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*InvocResult",
                "description": "*InvocResult",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "MsgCid": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Msg": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "MsgRct": {
                                "ExitCode": 0,
                                "Return": "Ynl0ZSBhcnJheQ==",
                                "GasUsed": 9,
                                "EventsRoot": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                }
                            },
                            "GasCost": {
                                "Message": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "GasUsed": "0",
                                "BaseFeeBurn": "0",
                                "OverEstimationBurn": "0",
                                "MinerPenalty": "0",
                                "MinerTip": "0",
                                "Refund": "0",
                                "TotalCost": "0"
                            },
                            "ExecutionTrace": {
                                "Msg": {
                                    "From": "f01234",
                                    "To": "f01234",
                                    "Value": "0",
                                    "Method": 1,
                                    "Params": "Ynl0ZSBhcnJheQ==",
                                    "ParamsCodec": 42,
                                    "GasLimit": 42,
                                    "ReadOnly": true
                                },
                                "MsgRct": {
                                    "ExitCode": 0,
                                    "Return": "Ynl0ZSBhcnJheQ==",
                                    "ReturnCodec": 42
                                },
                                "InvokedActor": {
                                    "Id": 1000,
                                    "State": {
                                        "Code": {
                                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                        },
                                        "Head": {
                                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                        },
                                        "Nonce": 42,
                                        "Balance": "0",
                                        "DelegatedAddress": "f01234"
                                    }
                                },
                                "GasCharges": [
                                    {
                                        "Name": "string value",
                                        "tg": 9,
                                        "cg": 9,
                                        "sg": 9,
                                        "tt": 60000000000
                                    }
                                ],
                                "Subcalls": [
                                    {
                                        "Msg": {
                                            "From": "f01234",
                                            "To": "f01234",
                                            "Value": "0",
                                            "Method": 1,
                                            "Params": "Ynl0ZSBhcnJheQ==",
                                            "ParamsCodec": 42,
                                            "GasLimit": 42,
                                            "ReadOnly": true
                                        },
                                        "MsgRct": {
                                            "ExitCode": 0,
                                            "Return": "Ynl0ZSBhcnJheQ==",
                                            "ReturnCodec": 42
                                        },
                                        "InvokedActor": {
                                            "Id": 1000,
                                            "State": {
                                                "Code": {
                                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                                },
                                                "Head": {
                                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                                },
                                                "Nonce": 42,
                                                "Balance": "0",
                                                "DelegatedAddress": "f01234"
                                            }
                                        },
                                        "GasCharges": [
                                            {
                                                "Name": "string value",
                                                "tg": 9,
                                                "cg": 9,
                                                "sg": 9,
                                                "tt": 60000000000
                                            }
                                        ],
                                        "Subcalls": null
                                    }
                                ]
                            },
                            "Error": "string value",
                            "Duration": 60000000000
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Duration": {
                            "title": "number",
                            "type": "number"
                        },
                        "Error": {
                            "type": "string"
                        },
                        "ExecutionTrace": {
                            "additionalProperties": false,
                            "properties": {
                                "GasCharges": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Name": {
                                                "type": "string"
                                            },
                                            "cg": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "sg": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "tg": {
                                                "title": "number",
                                                "type": "number"
                                            },
                                            "tt": {
                                                "title": "number",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "InvokedActor": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Id": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "State": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "Balance": {
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                "Code": {
                                                    "title": "Content Identifier",
                                                    "type": "string"
                                                },
                                                "DelegatedAddress": {
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                "Head": {
                                                    "title": "Content Identifier",
                                                    "type": "string"
                                                },
                                                "Nonce": {
                                                    "title": "number",
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Msg": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "From": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasLimit": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Method": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Params": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "ParamsCodec": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "ReadOnly": {
                                            "type": "boolean"
                                        },
                                        "To": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Value": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "MsgRct": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "ExitCode": {
                                            "title": "number",
                                            "type": "number"
                                        },
                                        "Return": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "ReturnCodec": {
                                            "title": "number",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Subcalls": {
                                    "items": {},
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "GasCost": {
                            "additionalProperties": false,
                            "properties": {
                                "BaseFeeBurn": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasUsed": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Message": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "MinerPenalty": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "MinerTip": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "OverEstimationBurn": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Refund": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "TotalCost": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "Msg": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Nonce": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "title": "number",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "MsgCid": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "MsgRct": {
                            "additionalProperties": false,
                            "properties": {
                                "EventsRoot": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "ExitCode": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasUsed": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Return": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4772"
            }
        },
        {
            "name": "Filecoin.StateSearchMsg",
            "description": "```go\nfunc (s *GatewayStruct) StateSearchMsg(p0 context.Context, p1 types.TipSetKey, p2 cid.Cid, p3 abi.ChainEpoch, p4 bool) (*MsgLookup, error) {\n\tif s.Internal.StateSearchMsg == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateSearchMsg(p0, p1, p2, p3, p4)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MsgLookup",
                "description": "*MsgLookup",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Message": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Receipt": {
                                "ExitCode": 0,
                                "Return": "Ynl0ZSBhcnJheQ==",
                                "GasUsed": 9,
                                "EventsRoot": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                }
                            },
                            "ReturnDec": {},
                            "TipSet": [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ],
                            "Height": 10101
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Height": {
                            "title": "number",
                            "type": "number"
                        },
                        "Message": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Receipt": {
                            "additionalProperties": false,
                            "properties": {
                                "EventsRoot": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "ExitCode": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasUsed": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Return": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "ReturnDec": {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "TipSet": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4783"
            }
        },
        {
            "name": "Filecoin.StateSectorGetInfo",
            "description": "```go\nfunc (s *GatewayStruct) StateSectorGetInfo(p0 context.Context, p1 address.Address, p2 abi.SectorNumber, p3 types.TipSetKey) (*miner.SectorOnChainInfo, error) {\n\tif s.Internal.StateSectorGetInfo == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateSectorGetInfo(p0, p1, p2, p3)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "abi.SectorNumber",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            9
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*miner.SectorOnChainInfo",
                "description": "*miner.SectorOnChainInfo",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "SectorNumber": 9,
                            "SealProof": 8,
                            "SealedCID": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "DealIDs": [
                                5432
                            ],
                            "Activation": 10101,
                            "Expiration": 10101,
                            "DealWeight": "0",
                            "VerifiedDealWeight": "0",
                            "InitialPledge": "0",
                            "ExpectedDayReward": "0",
                            "ExpectedStoragePledge": "0",
                            "PowerBaseEpoch": 10101,
                            "ReplacedDayReward": "0",
                            "SectorKeyCID": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Flags": 0
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Activation": {
                            "title": "number",
                            "type": "number"
                        },
                        "DealIDs": {
                            "items": {
                                "description": "Number is a number",
                                "title": "number",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "DealWeight": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "ExpectedDayReward": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "ExpectedStoragePledge": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Expiration": {
                            "title": "number",
                            "type": "number"
                        },
                        "Flags": {
                            "title": "number",
                            "type": "number"
                        },
                        "InitialPledge": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "PowerBaseEpoch": {
                            "title": "number",
                            "type": "number"
                        },
                        "ReplacedDayReward": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "SealProof": {
                            "title": "number",
                            "type": "number"
                        },
                        "SealedCID": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "SectorKeyCID": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "SectorNumber": {
                            "title": "number",
                            "type": "number"
                        },
                        "VerifiedDealWeight": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4794"
            }
        },
        {
            "name": "Filecoin.StateVerifiedClientStatus",
            "description": "```go\nfunc (s *GatewayStruct) StateVerifiedClientStatus(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (*abi.StoragePower, error) {\n\tif s.Internal.StateVerifiedClientStatus == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateVerifiedClientStatus(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*abi.StoragePower",
                "description": "*abi.StoragePower",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4805"
            }
        },
        {
            "name": "Filecoin.StateVerifierStatus",
            "description": "```go\nfunc (s *GatewayStruct) StateVerifierStatus(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (*abi.StoragePower, error) {\n\tif s.Internal.StateVerifierStatus == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateVerifierStatus(p0, p1, p2)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*abi.StoragePower",
                "description": "*abi.StoragePower",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4816"
            }
        },
        {
            "name": "Filecoin.StateWaitMsg",
            "description": "```go\nfunc (s *GatewayStruct) StateWaitMsg(p0 context.Context, p1 cid.Cid, p2 uint64, p3 abi.ChainEpoch, p4 bool) (*MsgLookup, error) {\n\tif s.Internal.StateWaitMsg == nil {\n\t\treturn nil, ErrNotSupported\n\t}\n\treturn s.Internal.StateWaitMsg(p0, p1, p2, p3, p4)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p2",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            42
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p3",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "number",
                        "description": "Number is a number",
                        "examples": [
                            10101
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "p4",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*MsgLookup",
                "description": "*MsgLookup",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Message": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Receipt": {
                                "ExitCode": 0,
                                "Return": "Ynl0ZSBhcnJheQ==",
                                "GasUsed": 9,
                                "EventsRoot": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                }
                            },
                            "ReturnDec": {},
                            "TipSet": [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ],
                            "Height": 10101
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Height": {
                            "title": "number",
                            "type": "number"
                        },
                        "Message": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Receipt": {
                            "additionalProperties": false,
                            "properties": {
                                "EventsRoot": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "ExitCode": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "GasUsed": {
                                    "title": "number",
                                    "type": "number"
                                },
                                "Return": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "ReturnDec": {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "TipSet": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4827"
            }
        },
        {
            "name": "Filecoin.Version",
            "description": "```go\nfunc (s *GatewayStruct) Version(p0 context.Context) (APIVersion, error) {\n\tif s.Internal.Version == nil {\n\t\treturn *new(APIVersion), ErrNotSupported\n\t}\n\treturn s.Internal.Version(p0)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "APIVersion",
                "description": "APIVersion",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Version": "string value",
                            "APIVersion": 131840,
                            "BlockDelay": 42
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "APIVersion": {
                            "title": "number",
                            "type": "number"
                        },
                        "BlockDelay": {
                            "title": "number",
                            "type": "number"
                        },
                        "Version": {
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4849"
            }
        },
        {
            "name": "Filecoin.WalletBalance",
            "description": "```go\nfunc (s *GatewayStruct) WalletBalance(p0 context.Context, p1 address.Address) (types.BigInt, error) {\n\tif s.Internal.WalletBalance == nil {\n\t\treturn *new(types.BigInt), ErrNotSupported\n\t}\n\treturn s.Internal.WalletBalance(p0, p1)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p1",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4860"
            }
        },
        {
            "name": "Filecoin.Web3ClientVersion",
            "description": "```go\nfunc (s *GatewayStruct) Web3ClientVersion(p0 context.Context) (string, error) {\n\tif s.Internal.Web3ClientVersion == nil {\n\t\treturn \"\", ErrNotSupported\n\t}\n\treturn s.Internal.Web3ClientVersion(p0)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "string",
                "description": "string",
                "summary": "",
                "schema": {
                    "examples": [
                        "string value"
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/proxy_gen.go#L4871"
            }
        }
    ]
}
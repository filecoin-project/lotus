package system

import (
	"github.com/ipfs/go-cid"

	"github.com/filecoin-project/lotus/chain/actors/adt"

{{if (le .v 7)}}
	system{{.v}} "github.com/filecoin-project/specs-actors{{.import}}actors/builtin/system"
{{else}}
	system{{.v}} "github.com/filecoin-project/go-state-types/builtin{{.import}}system"
{{end}}
)

var _ State = (*state{{.v}})(nil)

func load{{.v}}(store adt.Store, root cid.Cid) (State, error) {
	out := state{{.v}}{store: store}
	err := store.Get(store.Context(), root, &out)
	if err != nil {
		return nil, err
	}
	return &out, nil
}

func make{{.v}}(store adt.Store{{if (ge .v 8)}}, builtinActors cid.Cid{{end}}) (State, error) {
	out := state{{.v}}{store: store}
	out.State = system{{.v}}.State{
	{{if (ge .v 8)}}BuiltinActors: builtinActors,{{end}}
	}
	return &out, nil
}

type state{{.v}} struct {
	system{{.v}}.State
	store adt.Store
}

func (s *state{{.v}}) GetState() interface{} {
	return &s.State
}

func (s *state{{.v}}) GetBuiltinActors() cid.Cid {
{{if (le .v 7)}}
	return cid.Undef
{{else}}
	return s.State.BuiltinActors
{{end}}
}